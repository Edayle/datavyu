From 2b8c0a701b0c3ee7169cd96277733b150e30969b Mon Sep 17 00:00:00 2001
From: unknown <uqul@.itee.uq.edu.au>
Date: Tue, 24 Mar 2009 13:42:49 +1000
Subject: [PATCH] basic custom component for spreadsheet working

---
 ...mplemented-Spreadsheet-component-of-UISpe.patch |   29 ++++++
 ...m.nicta.openshapa.uitests.UINewVariableTest.xml |   93 ++++++++++++++++++++
 .../views/discrete/ColumnHeaderPanel.java          |    3 +-
 .../openshapa/views/discrete/SpreadsheetPanel.java |    8 ++
 .../nicta/openshapa/uitests/UINewVariableTest.java |   59 ++++++++++++
 src/test/java/org/uispec4j/Column.java             |   65 ++++++++++++++
 src/test/java/org/uispec4j/Spreadsheet.java        |   60 +++++++++++++
 7 files changed, 316 insertions(+), 1 deletions(-)
 create mode 100644 0001-partially-implemented-Spreadsheet-component-of-UISpe.patch
 create mode 100644 TEST-au.com.nicta.openshapa.uitests.UINewVariableTest.xml
 create mode 100644 src/test/java/au/com/nicta/openshapa/uitests/UINewVariableTest.java
 create mode 100644 src/test/java/org/uispec4j/Column.java
 create mode 100644 src/test/java/org/uispec4j/Spreadsheet.java

diff --git a/0001-partially-implemented-Spreadsheet-component-of-UISpe.patch b/0001-partially-implemented-Spreadsheet-component-of-UISpe.patch
new file mode 100644
index 0000000..f8c4de0
--- /dev/null
+++ b/0001-partially-implemented-Spreadsheet-component-of-UISpe.patch
@@ -0,0 +1,29 @@
+From bf0db5a8c00238ef64a85594e169d753a83ef39b Mon Sep 17 00:00:00 2001
+From: unknown <uqul@.itee.uq.edu.au>
+Date: Tue, 17 Mar 2009 16:48:22 +1000
+Subject: [PATCH] partially implemented Spreadsheet component of UISpec4J and partially implemented first test case
+
+---
+ pom.xml |    6 ++++++
+ 1 files changed, 6 insertions(+), 0 deletions(-)
+
+diff --git a/pom.xml b/pom.xml
+index aef1dd3..9bd0381 100644
+--- a/pom.xml
++++ b/pom.xml
+@@ -259,6 +259,12 @@
+       <artifactId>QTJava</artifactId>
+       <version>7</version>
+     </dependency>
++	
++	<dependency>
++	  <groupId>uispec4j</groupId>
++	  <artifactId>uispec4j</artifactId>
++	  <version>1.5</version>
++	</dependency>
+ 
+   </dependencies>
+ </project>
+-- 
+1.6.2.1217.gd7bc3
+
diff --git a/TEST-au.com.nicta.openshapa.uitests.UINewVariableTest.xml b/TEST-au.com.nicta.openshapa.uitests.UINewVariableTest.xml
new file mode 100644
index 0000000..efee1b6
--- /dev/null
+++ b/TEST-au.com.nicta.openshapa.uitests.UINewVariableTest.xml
@@ -0,0 +1,93 @@
+<?xml version="1.0" encoding="UTF-8" ?>
+<testsuite errors="0" failures="1" hostname="mc139-12439" name="au.com.nicta.openshapa.uitests.UINewVariableTest" tests="1" time="11.276" timestamp="2009-03-24T03:00:06">
+  <properties>
+    <property name="java.runtime.name" value="Java(TM) SE Runtime Environment" />
+    <property name="sun.boot.library.path" value="C:\Program Files\Java\jdk1.6.0_12\jre\bin" />
+    <property name="java.vm.version" value="11.2-b01" />
+    <property name="java.vm.vendor" value="Sun Microsystems Inc." />
+    <property name="java.vendor.url" value="http://java.sun.com/" />
+    <property name="path.separator" value=";" />
+    <property name="java.vm.name" value="Java HotSpot(TM) Client VM" />
+    <property name="file.encoding.pkg" value="sun.io" />
+    <property name="user.country" value="AU" />
+    <property name="sun.java.launcher" value="SUN_STANDARD" />
+    <property name="sun.os.patch.level" value="Service Pack 3" />
+    <property name="test" value="UINewVariableTest" />
+    <property name="java.vm.specification.name" value="Java Virtual Machine Specification" />
+    <property name="user.dir" value="D:\Michael\openshapa" />
+    <property name="java.runtime.version" value="1.6.0_12-b04" />
+    <property name="java.awt.graphicsenv" value="sun.awt.Win32GraphicsEnvironment" />
+    <property name="basedir" value="D:\Michael\openshapa" />
+    <property name="java.endorsed.dirs" value="C:\Program Files\Java\jdk1.6.0_12\jre\lib\endorsed" />
+    <property name="os.arch" value="x86" />
+    <property name="java.io.tmpdir" value="c:\Temp\" />
+    <property name="line.separator" value="
+" />
+    <property name="java.vm.specification.vendor" value="Sun Microsystems Inc." />
+    <property name="user.variant" value="" />
+    <property name="os.name" value="Windows XP" />
+    <property name="sun.jnu.encoding" value="Cp1252" />
+    <property name="java.library.path" value="C:\Program Files\Java\jdk1.6.0_12\bin;.;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\Program Files\Common Files\Roxio Shared\DLLShared\;C:\Program Files\QuickTime\QTSystem\;C:\Program Files\Git\cmd" />
+    <property name="java.specification.name" value="Java Platform API Specification" />
+    <property name="java.class.version" value="50.0" />
+    <property name="sun.management.compiler" value="HotSpot Client Compiler" />
+    <property name="os.version" value="5.1" />
+    <property name="user.home" value="C:\Documents and Settings\uqul" />
+    <property name="user.timezone" value="" />
+    <property name="java.awt.printerjob" value="sun.awt.windows.WPrinterJob" />
+    <property name="file.encoding" value="Cp1252" />
+    <property name="java.specification.version" value="1.6" />
+    <property name="user.name" value="uqul" />
+    <property name="java.class.path" value="C:\Program Files\NetBeans 6.7 M2\java2\ant\patches\72080.jar;C:\Program Files\NetBeans 6.7 M2\java2\ant\patches\ant-42275.jar;C:\Program Files\NetBeans 6.7 M2\java2\ant\lib\ant.jar;C:\Program Files\NetBeans 6.7 M2\java2\ant\lib\ant-junit.jar;D:\Michael\openshapa\target\classes;D:\Michael\openshapa\src\main\java;D:\Michael\openshapa\target\test-classes;D:\Michael\openshapa\src\test\java;D:\Michael\openshapa\src\main\resources;C:\Documents and Settings\uqul\.m2\repository\junit\junit\4.3\junit-4.3.jar;C:\Documents and Settings\uqul\.m2\repository\junit-addons\junit-addons\1.4\junit-addons-1.4.jar;C:\Documents and Settings\uqul\.m2\repository\xerces\xercesImpl\2.6.2\xercesImpl-2.6.2.jar;C:\Documents and Settings\uqul\.m2\repository\xerces\xmlParserAPIs\2.6.2\xmlParserAPIs-2.6.2.jar;C:\Documents and Settings\uqul\.m2\repository\javax\script\script-api\1.0\script-api-1.0.jar;C:\Documents and Settings\uqul\.m2\repository\jruby\jruby_engine\1.1.6\jruby_engine-1.1.6.jar;C:\Documents and Settings\uqul\.m2\repository\org\jruby\jruby-complete\1.1RC3\jruby-complete-1.1RC3.jar;C:\Documents and Settings\uqul\.m2\repository\apache-log4j\log4j\1.2.14\log4j-1.2.14.jar;C:\Documents and Settings\uqul\.m2\repository\org\swinglabs\swing-layout\1.0.3\swing-layout-1.0.3.jar;C:\Documents and Settings\uqul\.m2\repository\org\mobicents\external\appframework\appframework\1.0.3\appframework-1.0.3.jar;C:\Documents and Settings\uqul\.m2\repository\org\mobicents\external\appframework\swing-worker\1.1\swing-worker-1.1.jar;C:\Documents and Settings\uqul\.m2\repository\quicktime\QTJava\7\QTJava-7.jar;C:\Documents and Settings\uqul\.m2\repository\uispec4j\uispec4j\1.5\uispec4j-1.5.jar;C:\Documents and Settings\uqul\.m2\repository\asm\asm\1.5.2\asm-1.5.2.jar;C:\Documents and Settings\uqul\.m2\repository\asm\asm-util\1.5.2\asm-util-1.5.2.jar;C:\Documents and Settings\uqul\.m2\repository\asm\asm-attrs\1.5.1\asm-attrs-1.5.1.jar" />
+    <property name="java.vm.specification.version" value="1.0" />
+    <property name="sun.arch.data.model" value="32" />
+    <property name="java.home" value="C:\Program Files\Java\jdk1.6.0_12\jre" />
+    <property name="java.specification.vendor" value="Sun Microsystems Inc." />
+    <property name="user.language" value="en" />
+    <property name="awt.toolkit" value="sun.awt.windows.WToolkit" />
+    <property name="java.vm.info" value="mixed mode" />
+    <property name="java.version" value="1.6.0_12" />
+    <property name="java.ext.dirs" value="C:\Program Files\Java\jdk1.6.0_12\jre\lib\ext;C:\WINDOWS\Sun\Java\lib\ext" />
+    <property name="sun.boot.class.path" value="C:\Program Files\Java\jdk1.6.0_12\jre\lib\resources.jar;C:\Program Files\Java\jdk1.6.0_12\jre\lib\rt.jar;C:\Program Files\Java\jdk1.6.0_12\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.6.0_12\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.6.0_12\jre\lib\jce.jar;C:\Program Files\Java\jdk1.6.0_12\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.6.0_12\jre\classes" />
+    <property name="java.vendor" value="Sun Microsystems Inc." />
+    <property name="file.separator" value="\" />
+    <property name="java.vendor.url.bug" value="http://java.sun.com/cgi-bin/bugreport.cgi" />
+    <property name="forkMode" value="once" />
+    <property name="sun.cpu.endian" value="little" />
+    <property name="sun.io.unicode.encoding" value="UnicodeLittle" />
+    <property name="sun.desktop" value="windows" />
+    <property name="sun.cpu.isalist" value="" />
+  </properties>
+  <testcase classname="au.com.nicta.openshapa.uitests.UINewVariableTest" name="testTextVariable" time="10.695">
+    <failure message="No window was shown (timeout expired)" type="junit.framework.AssertionFailedError">junit.framework.AssertionFailedError: No window was shown (timeout expired)
+	at org.uispec4j.interception.handlers.ShownInterceptionDetectionHandler.waitWindow(ShownInterceptionDetectionHandler.java:31)
+	at org.uispec4j.interception.WindowInterceptor.run(WindowInterceptor.java:316)
+	at org.uispec4j.interception.WindowInterceptor.run(WindowInterceptor.java:282)
+	at org.uispec4j.interception.MainClassAdapter.intercept(MainClassAdapter.java:40)
+	at org.uispec4j.interception.MainClassAdapter.getMainWindow(MainClassAdapter.java:34)
+	at org.uispec4j.UISpecTestCase.getMainWindow(UISpecTestCase.java:83)
+	at au.com.nicta.openshapa.uitests.UINewVariableTest.testTextVariable(UINewVariableTest.java:40)
+</failure>
+  </testcase>
+  <system-out><![CDATA[]]></system-out>
+  <system-err><![CDATA[Exception in thread "AWT-EventQueue-0" java.lang.ExceptionInInitializerError
+	at au.com.nicta.openshapa.views.discrete.layouts.SheetLayoutFactory.getLayout(SheetLayoutFactory.java:40)
+	at au.com.nicta.openshapa.views.discrete.SpreadsheetPanel.setLayoutType(SpreadsheetPanel.java:282)
+	at au.com.nicta.openshapa.views.discrete.SpreadsheetPanel.<init>(SpreadsheetPanel.java:63)
+	at au.com.nicta.openshapa.views.OpenSHAPAView.<init>(OpenSHAPAView.java:43)
+	at au.com.nicta.openshapa.OpenSHAPA.startup(OpenSHAPA.java:206)
+	at org.jdesktop.application.Application$1.run(Application.java:171)
+	at java.awt.event.InvocationEvent.dispatch(InvocationEvent.java:209)
+	at java.awt.EventQueue.dispatchEvent(EventQueue.java:597)
+	at java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:269)
+	at java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:184)
+	at java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:174)
+	at java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:169)
+	at java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:161)
+	at java.awt.EventDispatchThread.run(EventDispatchThread.java:122)
+Caused by: java.lang.RuntimeException: Uncompilable source code
+	at au.com.nicta.openshapa.views.discrete.layouts.SheetLayoutFactory$SheetLayoutType.values(SheetLayoutFactory.java)
+	at au.com.nicta.openshapa.views.discrete.layouts.SheetLayoutFactory$1.<clinit>(SheetLayoutFactory.java:40)
+	... 14 more
+]]></system-err>
+</testsuite>
diff --git a/src/main/java/au/com/nicta/openshapa/views/discrete/ColumnHeaderPanel.java b/src/main/java/au/com/nicta/openshapa/views/discrete/ColumnHeaderPanel.java
index 44d85d7..f49f120 100644
--- a/src/main/java/au/com/nicta/openshapa/views/discrete/ColumnHeaderPanel.java
+++ b/src/main/java/au/com/nicta/openshapa/views/discrete/ColumnHeaderPanel.java
@@ -10,9 +10,10 @@ import javax.swing.JLabel;
 
 /**
  * ColumnHeaderPanel displays the column variable name.
+ * Public for use by UISpec4J
  * @author swhitcher
  */
-class ColumnHeaderPanel extends JLabel implements Selectable, MouseListener {
+public class ColumnHeaderPanel extends JLabel implements Selectable, MouseListener {
 
     /** Selected state. */
     private boolean selected = false;
diff --git a/src/main/java/au/com/nicta/openshapa/views/discrete/SpreadsheetPanel.java b/src/main/java/au/com/nicta/openshapa/views/discrete/SpreadsheetPanel.java
index d6f6f7e..faba277 100644
--- a/src/main/java/au/com/nicta/openshapa/views/discrete/SpreadsheetPanel.java
+++ b/src/main/java/au/com/nicta/openshapa/views/discrete/SpreadsheetPanel.java
@@ -127,6 +127,14 @@ public class SpreadsheetPanel extends JPanel
     }
 
     /**
+     * Returns the vector of Spreadsheet columns.
+     * Need for UISpec4J testing
+     */
+    public Vector<SpreadsheetColumn> getColumns() {
+        return columns;
+    }
+
+    /**
      * Deselect all selected items in the Spreadsheet.
      */
     public final void deselectAll() {
diff --git a/src/test/java/au/com/nicta/openshapa/uitests/UINewVariableTest.java b/src/test/java/au/com/nicta/openshapa/uitests/UINewVariableTest.java
new file mode 100644
index 0000000..f4ebbdd
--- /dev/null
+++ b/src/test/java/au/com/nicta/openshapa/uitests/UINewVariableTest.java
@@ -0,0 +1,59 @@
+/*
+ * To change this template, choose Tools | Templates
+ * and open the template in the editor.
+ */
+
+package au.com.nicta.openshapa.uitests;
+
+
+import org.uispec4j.interception.MainClassAdapter;
+import org.uispec4j.interception.WindowInterceptor;
+import au.com.nicta.openshapa.OpenSHAPA;
+import au.com.nicta.openshapa.views.discrete.SpreadsheetPanel;
+import org.uispec4j.MenuBar;
+import org.uispec4j.Spreadsheet;
+import org.uispec4j.UIComponent;
+import org.uispec4j.UISpec4J;
+import org.uispec4j.UISpecTestCase;
+import org.uispec4j.Window;
+
+
+
+
+/**
+ *
+ * @author uqul
+ */
+public class UINewVariableTest extends UISpecTestCase {
+
+    protected void setUp() throws Exception {
+        super.setUp();
+        setAdapter(new MainClassAdapter(OpenSHAPA.class, new String[0]));
+    }
+
+    static {
+      UISpec4J.init();
+    }
+
+    public void testTextVariable() throws Exception {
+        // 1. Retrieve the components
+        Window window = getMainWindow();
+
+        // 2. Create new variable, open spreadsheet and check that it's there. Do for each type.
+        MenuBar menuBar = window.getMenuBar();
+
+        Window newVarWindow = WindowInterceptor.run(menuBar.getMenu("Spreadsheet").getSubMenu("New Variable").triggerClick());
+        newVarWindow.getTextBox("nameField").insertText("textVar", 0);
+        newVarWindow.getRadioButton("text").click();
+        assertTrue(newVarWindow.getRadioButton("text").isSelected());
+        newVarWindow.getButton("Ok").click();
+
+        //Window spreadsheetWindow = WindowInterceptor.run(menuBar.getMenu("Spreadsheet").getSubMenu("Show Spreadsheet").triggerClick());
+        UIComponent[] ucArr = window.getUIComponents(Spreadsheet.class);
+        Spreadsheet ss = new Spreadsheet(((SpreadsheetPanel)(ucArr[0].getAwtComponent())));
+        assertNotNull(ss.getSpreadsheetColumn("textVar"));
+
+        //assertNotNull(((Spreadsheet)(window.findUIComponent(Spreadsheet.class))).getSpreadsheetColumn("textVar"));
+    }
+
+}
\ No newline at end of file
diff --git a/src/test/java/org/uispec4j/Column.java b/src/test/java/org/uispec4j/Column.java
new file mode 100644
index 0000000..bbb6265
--- /dev/null
+++ b/src/test/java/org/uispec4j/Column.java
@@ -0,0 +1,65 @@
+/*
+ * To change this template, choose Tools | Templates
+ * and open the template in the editor.
+ */
+
+package org.uispec4j;
+
+import au.com.nicta.openshapa.views.discrete.SpreadsheetColumn;
+import au.com.nicta.openshapa.views.discrete.ColumnHeaderPanel;
+import java.awt.Component;
+import javax.swing.JLabel;
+import junit.framework.Assert;
+import org.uispec4j.finder.ComponentFinder;
+
+
+
+/**
+ *
+ * @author uqul
+ */
+public class Column extends AbstractUIComponent {
+    public static final String TYPE_NAME = "spreadsheet column";
+    public static final Class[] SWING_CLASSES = {JLabel.class};
+
+    private SpreadsheetColumn ssColumn;
+
+    private ComponentFinder finder;
+
+    public Column(SpreadsheetColumn spreadsheetColumn) {
+        Assert.assertNotNull(spreadsheetColumn);
+        this.ssColumn = spreadsheetColumn;
+    }
+
+    public Component getAwtComponent() {
+        return ssColumn.getHeaderPanel();
+    }
+
+    public String getDescriptionTypeName() {
+        return TYPE_NAME;
+    }
+
+    /**
+     * returns column header name
+     */
+    public String getHeaderName() {
+        String headerText = ((ColumnHeaderPanel)(ssColumn.getHeaderPanel())).getText();
+        String headerName = headerText.substring(0, headerText.lastIndexOf("  ("));
+        return headerName;
+    }
+
+    /**
+     * returns column header type
+     */
+    public String getHeaderType() {
+        String headerText = ((ColumnHeaderPanel)(ssColumn.getHeaderPanel())).getText();
+        String headerType = headerText.substring(headerText.lastIndexOf("(")+1, headerText.length()-1);
+        return headerType;
+    }
+
+    /**
+     * returns cells in header - based on type, start time, endtime or ID
+     */
+
+
+}
diff --git a/src/test/java/org/uispec4j/Spreadsheet.java b/src/test/java/org/uispec4j/Spreadsheet.java
new file mode 100644
index 0000000..f5bc508
--- /dev/null
+++ b/src/test/java/org/uispec4j/Spreadsheet.java
@@ -0,0 +1,60 @@
+/*
+ * To change this template, choose Tools | Templates
+ * and open the template in the editor.
+ */
+
+package org.uispec4j;
+
+import au.com.nicta.openshapa.views.discrete.SpreadsheetColumn;
+import au.com.nicta.openshapa.views.discrete.ColumnHeaderPanel;
+import au.com.nicta.openshapa.views.discrete.SpreadsheetPanel;
+import java.awt.Component;
+import java.util.Iterator;
+import java.util.Vector;
+import javax.swing.JPanel;
+import junit.framework.Assert;
+
+
+
+/**
+ *
+ * @author uqul
+ */
+public class Spreadsheet extends AbstractUIComponent {
+    public static final String TYPE_NAME = "SpreadsheetPanel";
+    public static final Class[] SWING_CLASSES = {SpreadsheetPanel.class};
+
+    private SpreadsheetPanel ssPanel;
+
+    public Spreadsheet(SpreadsheetPanel spreadsheetPanel) {
+        Assert.assertNotNull(spreadsheetPanel);
+        this.ssPanel = spreadsheetPanel;
+    }
+
+    public Component getAwtComponent() {
+        return ssPanel;
+    }
+
+    public String getDescriptionTypeName() {
+        return TYPE_NAME;
+    }
+
+    /* Returns the SpreadSheetColumn with the given name. Returns null if not found. */
+    public Column getSpreadsheetColumn(String name) {
+        Vector<SpreadsheetColumn> columns = ssPanel.getColumns();
+
+        //Iterate over columns to find column and return it
+        Iterator it = columns.iterator();
+        while(it.hasNext()) {
+            SpreadsheetColumn col = (SpreadsheetColumn)it.next();
+            ColumnHeaderPanel header = (ColumnHeaderPanel)col.getHeaderPanel();
+            if(header.getText().startsWith(name)) {
+                return new Column(col);
+            }
+        }
+        return null;
+
+
+    }
+
+}
-- 
1.6.2.1217.gd7bc3

