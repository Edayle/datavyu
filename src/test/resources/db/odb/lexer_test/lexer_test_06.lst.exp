00001  ; MacSHAPA Open Database
00002  ; 
00003  ; This database starts to get rough with the lexer.  The general idea is to 
00004  ; generate all the errors and warnings that the lexer is capable of flagging.
00005  ;
00006  ; Needless to say, this is not a legal database, and will cause even more
00007  ; fireworks if fed to the parser instead of just the lexer.
00008  ;
00009  ; This file deals only with errors that can be generated with string tokens.
00010  ;
00011  ; This string contains an illegal escape sequence
00012  
00013  " an illegal escape sequence follows: \]"

      WARNING   4 (Line 13:1): Illegal escape sequence detected in a string.  Sequence replaced with a '_'.
        The sequence was: \]

((code = 6(STRING_TOK)) (aux = 224(TEXT_QSTRING_FLAG|QSTRING_FLAG|NONBLANK_FLAG)) (val = 0.0) (str =  an illegal escape sequence follows: _) (line_number = 13) (line_index = 1))

00014  
00015  ; This string contains a backspace
00016  
00017  " the next character is a BS (0x08):"

      WARNING   5 (Line 17:1): Illegal character detected in a string.  Character replaced with a '_'.
        The illegal character was:  (HEX 0x08)

((code = 6(STRING_TOK)) (aux = 224(TEXT_QSTRING_FLAG|QSTRING_FLAG|NONBLANK_FLAG)) (val = 0.0) (str =  the next character is a BS (0x08):_) (line_number = 17) (line_index = 1))

00018  
00019  ; finally, an unterminated string
00020  
00021  " this string is unterminated and thus ends in an EOF

      ERROR  4 (Line 21:1): Encountered end of file unexpectedly.
        EOF was encountered in a string.  Unterminated string?

Unable to continue parse -- Aborting...
((code = 13(EOF_TOK)) (aux = 0) (val = 0.0) (str =  this string is unterminated and thus ends in an EOF
) (line_number = 21) (line_index = 1))

forcing modbr.abort_scan back to false...

