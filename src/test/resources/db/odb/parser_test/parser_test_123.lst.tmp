00001  ; MacSHAPA Open Database
00002  ( setf macshapa-db 
00003   '( 
00004      ( HEADER>
00005        ( 
00006          ( VERSION> 1 ) 
00007          ( NAME> "parser_test.db" )
00008          ( DEBUG-LEVEL> 2 ) 
00009          ( MAX-ERRORS> 20 )
00010          ( MAX-WARNINGS> 50 )

      WARNING  25 (Line 9:23): The error limit in the MAX-ERRORS> attribute is too large.  Error limit forced to largest legal value.

00011        )
00012      )
00013      (
00014        USER>


Current Header Settings:
db.name = "parser_test.db"
odb file format version = 1
warning limit = 50
error limit = 10
debug level = 2

00015        (
00016          (
00017            PREDICATE-DEFINITIONS>
00018            (
00019              ( 
00020                |GOAL| 
00021                ( 
00022                  ( VARIABLE-LENGTH> FALSE )
00023                  ( FORMAL-ARG-LIST> ( |<TEMPERATURE>| |<VOLUME>| |<FLOWRATE>| ) ) 
00024                )
00025              )
00026              ( 
00027                |COMMAND|


Predicate Definition:
	name = "GOAL"
	variable length = false
	arg 0 = "<TEMPERATURE>"
	arg 1 = "<VOLUME>"
	arg 2 = "<FLOWRATE>"

00028                (
00029                  ( VARIABLE-LENGTH> FALSE )
00030                  ( FORMAL-ARG-LIST> ( |<SPEAKER>| |<TO>| |<MITIGATION>| ) ) 
00031                )
00032              )
00033              ( 
00034                |ACKNOWL|


Predicate Definition:
	name = "COMMAND"
	variable length = false
	arg 0 = "<SPEAKER>"
	arg 1 = "<TO>"
	arg 2 = "<MITIGATION>"

00035                (
00036                  ( VARIABLE-LENGTH> FALSE )
00037                  ( FORMAL-ARG-LIST> ( |<SPEAKER>| |<TO>| |<MITIGATION>| ) ) 
00038                )
00039              )
00040              ( 
00041                |ANNOUNCE|


Predicate Definition:
	name = "ACKNOWL"
	variable length = false
	arg 0 = "<SPEAKER>"
	arg 1 = "<TO>"
	arg 2 = "<MITIGATION>"

00042                (
00043                  ( VARIABLE-LENGTH> FALSE )
00044                  ( FORMAL-ARG-LIST> ( |<SPEAKER>| |<MITIGATION>| ) ) 
00045                )
00046              )
00047              ( 
00048                |OBSERVE|


Predicate Definition:
	name = "ANNOUNCE"
	variable length = false
	arg 0 = "<SPEAKER>"
	arg 1 = "<MITIGATION>"

00049                (
00050                  ( VARIABLE-LENGTH> FALSE )
00051                  ( FORMAL-ARG-LIST> ( |<SPEAKER>| |<MITIGATION>| ) ) 
00052                )
00053              )
00054              ( 
00055                |REASON|


Predicate Definition:
	name = "OBSERVE"
	variable length = false
	arg 0 = "<SPEAKER>"
	arg 1 = "<MITIGATION>"

00056                (
00057                  ( VARIABLE-LENGTH> FALSE )
00058                  ( FORMAL-ARG-LIST> ( |<SPEAKER>| |<MITIGATION>| ) ) 
00059                )
00060              )
00061              ( 
00062                |PREDICT|


Predicate Definition:
	name = "REASON"
	variable length = false
	arg 0 = "<SPEAKER>"
	arg 1 = "<MITIGATION>"

00063                (
00064                  ( VARIABLE-LENGTH> FALSE )
00065                  ( FORMAL-ARG-LIST> ( |<SPEAKER>| |<MITIGATION>| ) ) 
00066                )
00067              )
00068            )
00069          )


Predicate Definition:
	name = "PREDICT"
	variable length = false
	arg 0 = "<SPEAKER>"
	arg 1 = "<MITIGATION>"

00070          (
00071            SPREADSHEET-VARIABLE-DECLARATIONS>
00072            (
00073              (
00074                |verbal|
00075                (
00076                  ( TYPE>            <<TEXT>> )
00077                  ( VARIABLE-LENGTH> FALSE  )
00078                  ( FORMAL-ARG-LIST> ( |<ord>| |<onset>| |<offset>| |<val>| ) )
00079                  ( COLUMN-WIDTH>    183 )
00080                )
00081              )
00082              (
00083                |state.var|


Spreadsheet Variable Definition:
	name = "verbal"
	type = TEXT
	variable length = false
	column width = 183
00084                (
00085                  ( TYPE>            <<MATRIX>> )
00086                  ( VARIABLE-LENGTH> FALSE  )
00087                  ( FORMAL-ARG-LIST> ( |<ord>| |<onset>| |<offset>| |<PARAM>| |<SUBSYS>| |<VAL>| ) )
00088                  ( COLUMN-WIDTH>    183 )
00089                )
00090              )
00091              (
00092                |sys.var|


Spreadsheet Variable Definition:
	name = "state.var"
	type = MATRIX
	variable length = false
	column width = 183
00093                (
00094                  ( TYPE>            <<MATRIX>> )
00095                  ( VARIABLE-LENGTH> FALSE  )
00096                  ( FORMAL-ARG-LIST> ( |<ord>| |<onset>| |<offset>| |<PARAM>| |<SUBSYS>| |<VAL>| ) )
00097                  ( COLUMN-WIDTH>    200 )
00098                )
00099              )
00100              (
00101                |speechcode|


Spreadsheet Variable Definition:
	name = "sys.var"
	type = MATRIX
	variable length = false
	column width = 200
00102                (
00103                  ( TYPE>            <<PREDICATE>> )
00104                  ( VARIABLE-LENGTH> FALSE  )
00105                  ( FORMAL-ARG-LIST> ( |<ord>| |<onset>| |<offset>| |<val>| ) )
00106                  ( COLUMN-WIDTH>    200 )
00107                )
00108              )
00109            )
00110          )


Spreadsheet Variable Definition:
	name = "speechcode"
	type = PREDICATE
	variable length = false
	column width = 200
00111          (
00112            SPREADSHEET-VARIABLE-DEFINITIONS>
00113            (
00114              (
00115                |verbal|
00116                (
00117                  (
00118                    CELLS>
00119                    (
00120                      ( ( ONSET>   60 ) ( OFFSET>  360 ) ( |<val>| "Expter:  Please try to increase temperature, increase volume and increase flowrate." ) ) 
00121                      ( ( ONSET>  420 ) ( OFFSET>  540 ) ( |<val>| "Sam:  Tom, you can do the hydraulic side and I'll do the heat side." ) ) 


Spreadsheet Variable Cell Definition:
	ord = 1
	onset = 00:00:01:000
	offset = 00:00:06:000
	value = Expter:  Please try to increase temperature, increase volume and increase flowrate.
00122                      ( ( ONSET>  600 ) ( OFFSET>  660 ) ( |<val>| "Tom:  If you like." ) ) 


Spreadsheet Variable Cell Definition:
	ord = 2
	onset = 00:00:07:000
	offset = 00:00:09:000
	value = Sam:  Tom, you can do the hydraulic side and I'll do the heat side.
00123                      ( ( ONSET>  660 ) ( OFFSET>  780 ) ( |<val>| "Sam:  I'll set heater up to 8 for now." ) ) 


Spreadsheet Variable Cell Definition:
	ord = 3
	onset = 00:00:10:000
	offset = 00:00:11:000
	value = Tom:  If you like.
00124                      ( ( ONSET>  780 ) ( OFFSET> 1260 ) ( |<val>| "Tom:  OK.  First to increase flowrate I'm going to open the input valve a bit more and open up the output valve." ) ) 


Spreadsheet Variable Cell Definition:
	ord = 4
	onset = 00:00:11:000
	offset = 00:00:13:000
	value = Sam:  I'll set heater up to 8 for now.
00125                      ( ( ONSET> 1260 ) ( OFFSET> 1440 ) ( |<val>| "Sam:  OK, volume is starting to increase..." ) ) 


Spreadsheet Variable Cell Definition:
	ord = 5
	onset = 00:00:13:000
	offset = 00:00:21:000
	value = Tom:  OK.  First to increase flowrate I'm going to open the input valve a bit more and open up the output valve.
00126                      ( ( ONSET> 1440 ) ( OFFSET> 1560 ) ( |<val>| "Sam:  ...and so is flow rate." ) ) 


Spreadsheet Variable Cell Definition:
	ord = 6
	onset = 00:00:21:000
	offset = 00:00:24:000
	value = Sam:  OK, volume is starting to increase...
00127                      ( ( ONSET> 1680 ) ( OFFSET> 1800 ) ( |<val>| "Sam:  Nothing happening so far on temperature..." ) ) 


Spreadsheet Variable Cell Definition:
	ord = 7
	onset = 00:00:24:000
	offset = 00:00:26:000
	value = Sam:  ...and so is flow rate.
00128                      ( ( ONSET> 1800 ) ( OFFSET> 1860 ) ( |<val>| "Sam:  ...so I'll send it up to 9." ) ) 


Spreadsheet Variable Cell Definition:
	ord = 8
	onset = 00:00:28:000
	offset = 00:00:30:000
	value = Sam:  Nothing happening so far on temperature...
00129                      ( ( ONSET> 1920 ) ( OFFSET> 2040 ) ( |<val>| "Sam:  You haven't done anything to the mixer value and volume is going up pretty fast." ) ) 


Spreadsheet Variable Cell Definition:
	ord = 9
	onset = 00:00:30:000
	offset = 00:00:31:000
	value = Sam:  ...so I'll send it up to 9.
00130                      ( ( ONSET> 2160 ) ( OFFSET> 2220 ) ( |<val>| "Tom:  Oh sorry...I always forget that!" ) ) 


Spreadsheet Variable Cell Definition:
	ord = 10
	onset = 00:00:32:000
	offset = 00:00:34:000
	value = Sam:  You haven't done anything to the mixer value and volume is going up pretty fast.
00131                      ( ( ONSET> 2280 ) ( OFFSET> 2400 ) ( |<val>| "Tom:  I wonder why the flow rate is decreasing?" ) ) 


Spreadsheet Variable Cell Definition:
	ord = 11
	onset = 00:00:36:000
	offset = 00:00:37:000
	value = Tom:  Oh sorry...I always forget that!
00132                      ( ( ONSET> 2460 ) ( OFFSET> 2520 ) ( |<val>| "Tom:  I increased input and output so flow rate should increase." ) ) 


Spreadsheet Variable Cell Definition:
	ord = 12
	onset = 00:00:38:000
	offset = 00:00:40:000
	value = Tom:  I wonder why the flow rate is decreasing?
00133                      ( ( ONSET> 2580 ) ( OFFSET> 2700 ) ( |<val>| "Tom:  Oh!  It's because I forgot to open the mixer valve." ) ) 


Spreadsheet Variable Cell Definition:
	ord = 13
	onset = 00:00:41:000
	offset = 00:00:42:000
	value = Tom:  I increased input and output so flow rate should increase.
00134                      ( ( ONSET> 2700 ) ( OFFSET> 2880 ) ( |<val>| "Tom:  So flow rate should increase in a minute or two." ) ) 


Spreadsheet Variable Cell Definition:
	ord = 14
	onset = 00:00:43:000
	offset = 00:00:45:000
	value = Tom:  Oh!  It's because I forgot to open the mixer valve.
00135                      ( ( ONSET> 2760 ) ( OFFSET> 2820 ) ( |<val>| "Sam:  There the temperature goes!" ) ) 


Spreadsheet Variable Cell Definition:
	ord = 15
	onset = 00:00:45:000
	offset = 00:00:48:000
	value = Tom:  So flow rate should increase in a minute or two.
00136                      ( ( ONSET> 2880 ) ( OFFSET> 3000 ) ( |<val>| "Tom:  ...and that's what it's doing." ) ) 


Spreadsheet Variable Cell Definition:
	ord = 16
	onset = 00:00:46:000
	offset = 00:00:47:000
	value = Sam:  There the temperature goes!
00137                      ( ( ONSET> 3000 ) ( OFFSET> 3120 ) ( |<val>| "Tom:  Oh hell!  It's going down again." ) ) 


Spreadsheet Variable Cell Definition:
	ord = 17
	onset = 00:00:48:000
	offset = 00:00:50:000
	value = Tom:  ...and that's what it's doing.
00138                      ( ( ONSET> 3120 ) ( OFFSET> 3180 ) ( |<val>| "Tom:  So I'll open the output a bit." ) ) 


Spreadsheet Variable Cell Definition:
	ord = 18
	onset = 00:00:50:000
	offset = 00:00:52:000
	value = Tom:  Oh hell!  It's going down again.
00139                      ( ( ONSET> 3300 ) ( OFFSET> 3480 ) ( |<val>| "Sam:  Why don't you let it settle rather than keeping on playing with it?" ) ) 


Spreadsheet Variable Cell Definition:
	ord = 19
	onset = 00:00:52:000
	offset = 00:00:53:000
	value = Tom:  So I'll open the output a bit.
00140                      ( ( ONSET> 3540 ) ( OFFSET> 3840 ) ( |<val>| "Tom:  Oh well...I don't think I play with it too much." ) ) 


Spreadsheet Variable Cell Definition:
	ord = 20
	onset = 00:00:55:000
	offset = 00:00:58:000
	value = Sam:  Why don't you let it settle rather than keeping on playing with it?
00141                      ( ( ONSET> 3840 ) ( OFFSET> 3960 ) ( |<val>| "Sam:  You do, you know." ) ) 


Spreadsheet Variable Cell Definition:
	ord = 21
	onset = 00:00:59:000
	offset = 00:01:04:000
	value = Tom:  Oh well...I don't think I play with it too much.
00142                      ( ( ONSET> 4200 ) ( OFFSET> 4320 ) ( |<val>| "Sam:  Temperature's still rising." ) ) 


Spreadsheet Variable Cell Definition:
	ord = 22
	onset = 00:01:04:000
	offset = 00:01:06:000
	value = Sam:  You do, you know.
00143                      ( ( ONSET> 4500 ) ( OFFSET> 4680 ) ( |<val>| "Tom:  You've confused me about the flowrate now, Sam!" ) ) 


Spreadsheet Variable Cell Definition:
	ord = 23
	onset = 00:01:10:000
	offset = 00:01:12:000
	value = Sam:  Temperature's still rising.
00144                    )
00145                  )
00146                )


Spreadsheet Variable Cell Definition:
	ord = 24
	onset = 00:01:15:000
	offset = 00:01:18:000
	value = Tom:  You've confused me about the flowrate now, Sam!
00147              )
00148              (
00149                |state.var|
00150                (
00151                  (
00152                    CELLS>
00153                    (
00154                      ( ( ONSET>    0 ) ( OFFSET>    0 ) ( |<PARAM>| |M| ) ( |<SUBSYS>| |L| ) ( |<VAL>| 5 ) ) 
00155                      ( ( ONSET>    0 ) ( OFFSET>    0 ) ( |<PARAM>| |I| ) ( |<SUBSYS>| |A| ) ( |<VAL>| 5 ) ) 


Spreadsheet Variable Cell Definition:
	ord = 1
	onset = 00:00:00:000
	offset = 00:00:00:000
	value = M, L, 5
00156                      ( ( ONSET>    0 ) ( OFFSET>    0 ) ( |<PARAM>| |O| ) ( |<SUBSYS>| |A| ) ( |<VAL>| 1 ) ) 


Spreadsheet Variable Cell Definition:
	ord = 2
	onset = 00:00:00:000
	offset = 00:00:00:000
	value = I, A, 5
00157                      ( ( ONSET>    0 ) ( OFFSET>    0 ) ( |<PARAM>| |H| ) ( |<SUBSYS>| |A| ) ( |<VAL>| 5 ) ) 


Spreadsheet Variable Cell Definition:
	ord = 3
	onset = 00:00:00:000
	offset = 00:00:00:000
	value = O, A, 1
00158                      ( ( ONSET>  660 ) ( OFFSET>  720 ) ( |<PARAM>| |H| ) ( |<SUBSYS>| |A| ) ( |<VAL>| 9 ) ) 


Spreadsheet Variable Cell Definition:
	ord = 4
	onset = 00:00:00:000
	offset = 00:00:00:000
	value = H, A, 5
00159                      ( ( ONSET> 1140 ) ( OFFSET> 1260 ) ( |<PARAM>| |O| ) ( |<SUBSYS>| |A| ) ( |<VAL>| 8 ) ) 


Spreadsheet Variable Cell Definition:
	ord = 5
	onset = 00:00:11:000
	offset = 00:00:12:000
	value = H, A, 9
00160                      ( ( ONSET> 1260 ) ( OFFSET> 1380 ) ( |<PARAM>| |I| ) ( |<SUBSYS>| |A| ) ( |<VAL>| 8 ) ) 


Spreadsheet Variable Cell Definition:
	ord = 6
	onset = 00:00:19:000
	offset = 00:00:21:000
	value = O, A, 8
00161                      ( ( ONSET> 1800 ) ( OFFSET> 1920 ) ( |<PARAM>| |H| ) ( |<SUBSYS>| |A| ) ( |<VAL>| 9 ) ) 


Spreadsheet Variable Cell Definition:
	ord = 7
	onset = 00:00:21:000
	offset = 00:00:23:000
	value = I, A, 8
00162                      ( ( ONSET> 2460 ) ( OFFSET> 2580 ) ( |<PARAM>| |M| ) ( |<SUBSYS>| |L| ) ( |<VAL>| 8 ) ) 


Spreadsheet Variable Cell Definition:
	ord = 8
	onset = 00:00:30:000
	offset = 00:00:32:000
	value = H, A, 9
00163                    )
00164                  )
00165                  ( VOCAB> ( ) )


Spreadsheet Variable Cell Definition:
	ord = 9
	onset = 00:00:41:000
	offset = 00:00:43:000
	value = M, L, 8
00166                )
00167              )
00168              (
00169                |sys.var|
00170                (
00171                  (
00172                    CELLS>
00173                    (
00174                      ( ( ONSET>    0 ) ( OFFSET> 1320 ) ( |<PARAM>| |V|  ) ( |<SUBSYS>| |A| ) ( |<VAL>| 21 ) ) 
00175                      ( ( ONSET>    0 ) ( OFFSET> 1440 ) ( |<PARAM>| |FR| ) ( |<SUBSYS>| |A| ) ( |<VAL>|  5 ) ) 


Spreadsheet Variable Cell Definition:
	ord = 1
	onset = 00:00:00:000
	offset = 00:00:22:000
	value = V, A, 21
00176                      ( ( ONSET>    0 ) ( OFFSET> 2760 ) ( |<PARAM>| |T|  ) ( |<SUBSYS>| |A| ) ( |<VAL>|  3 ) ) 


Spreadsheet Variable Cell Definition:
	ord = 2
	onset = 00:00:00:000
	offset = 00:00:24:000
	value = FR, A, 5
00177                      ( ( ONSET> 1320 ) ( OFFSET> 1500 ) ( |<PARAM>| |V|  ) ( |<SUBSYS>| |A| ) ( |<VAL>| 22 ) ) 


Spreadsheet Variable Cell Definition:
	ord = 3
	onset = 00:00:00:000
	offset = 00:00:46:000
	value = T, A, 3
00178                      ( ( ONSET> 1440 ) ( OFFSET> 1680 ) ( |<PARAM>| |FR| ) ( |<SUBSYS>| |A| ) ( |<VAL>|  6 ) ) 


Spreadsheet Variable Cell Definition:
	ord = 4
	onset = 00:00:22:000
	offset = 00:00:25:000
	value = V, A, 22
00179                      ( ( ONSET> 1500 ) ( OFFSET> 1860 ) ( |<PARAM>| |V|  ) ( |<SUBSYS>| |A| ) ( |<VAL>| 23 ) ) 


Spreadsheet Variable Cell Definition:
	ord = 5
	onset = 00:00:24:000
	offset = 00:00:28:000
	value = FR, A, 6
00180                      ( ( ONSET> 1680 ) ( OFFSET> 1920 ) ( |<PARAM>| |FR| ) ( |<SUBSYS>| |A| ) ( |<VAL>|  5 ) ) 


Spreadsheet Variable Cell Definition:
	ord = 6
	onset = 00:00:25:000
	offset = 00:00:31:000
	value = V, A, 23
00181                      ( ( ONSET> 1860 ) ( OFFSET> 1980 ) ( |<PARAM>| |V|  ) ( |<SUBSYS>| |A| ) ( |<VAL>| 24 ) ) 


Spreadsheet Variable Cell Definition:
	ord = 7
	onset = 00:00:28:000
	offset = 00:00:32:000
	value = FR, A, 5
00182                      ( ( ONSET> 1920 ) ( OFFSET> 2760 ) ( |<PARAM>| |FR| ) ( |<SUBSYS>| |A| ) ( |<VAL>|  4 ) ) 


Spreadsheet Variable Cell Definition:
	ord = 8
	onset = 00:00:31:000
	offset = 00:00:33:000
	value = V, A, 24
00183                      ( ( ONSET> 1980 ) ( OFFSET> 2040 ) ( |<PARAM>| |V|  ) ( |<SUBSYS>| |A| ) ( |<VAL>| 25 ) ) 


Spreadsheet Variable Cell Definition:
	ord = 9
	onset = 00:00:32:000
	offset = 00:00:46:000
	value = FR, A, 4
00184                      ( ( ONSET> 2040 ) ( OFFSET> 2580 ) ( |<PARAM>| |V|  ) ( |<SUBSYS>| |A| ) ( |<VAL>| 26 ) ) 


Spreadsheet Variable Cell Definition:
	ord = 10
	onset = 00:00:33:000
	offset = 00:00:34:000
	value = V, A, 25
00185                      ( ( ONSET> 2580 ) ( OFFSET> 4800 ) ( |<PARAM>| |V|  ) ( |<SUBSYS>| |A| ) ( |<VAL>| 25 ) ) 


Spreadsheet Variable Cell Definition:
	ord = 11
	onset = 00:00:34:000
	offset = 00:00:43:000
	value = V, A, 26
00186                      ( ( ONSET> 2760 ) ( OFFSET> 2820 ) ( |<PARAM>| |FR| ) ( |<SUBSYS>| |A| ) ( |<VAL>|  5 ) ) 


Spreadsheet Variable Cell Definition:
	ord = 12
	onset = 00:00:43:000
	offset = 00:01:20:000
	value = V, A, 25
00187                      ( ( ONSET> 2760 ) ( OFFSET> 2880 ) ( |<PARAM>| |T|  ) ( |<SUBSYS>| |A| ) ( |<VAL>| 24 ) ) 


Spreadsheet Variable Cell Definition:
	ord = 13
	onset = 00:00:46:000
	offset = 00:00:47:000
	value = FR, A, 5
00188                      ( ( ONSET> 2820 ) ( OFFSET> 2880 ) ( |<PARAM>| |FR| ) ( |<SUBSYS>| |A| ) ( |<VAL>|  6 ) ) 


Spreadsheet Variable Cell Definition:
	ord = 14
	onset = 00:00:46:000
	offset = 00:00:48:000
	value = T, A, 24
00189                      ( ( ONSET> 2880 ) ( OFFSET> 3300 ) ( |<PARAM>| |FR| ) ( |<SUBSYS>| |A| ) ( |<VAL>|  5 ) ) 


Spreadsheet Variable Cell Definition:
	ord = 15
	onset = 00:00:47:000
	offset = 00:00:48:000
	value = FR, A, 6
00190                      ( ( ONSET> 2880 ) ( OFFSET> 4200 ) ( |<PARAM>| |T|  ) ( |<SUBSYS>| |A| ) ( |<VAL>| 25 ) ) 


Spreadsheet Variable Cell Definition:
	ord = 16
	onset = 00:00:48:000
	offset = 00:00:55:000
	value = FR, A, 5
00191                      ( ( ONSET> 3300 ) ( OFFSET> 3780 ) ( |<PARAM>| |FR| ) ( |<SUBSYS>| |A| ) ( |<VAL>|  4 ) ) 


Spreadsheet Variable Cell Definition:
	ord = 17
	onset = 00:00:48:000
	offset = 00:01:10:000
	value = T, A, 25
00192                      ( ( ONSET> 3780 ) ( OFFSET> 4800 ) ( |<PARAM>| |FR| ) ( |<SUBSYS>| |A| ) ( |<VAL>|  3 ) ) 


Spreadsheet Variable Cell Definition:
	ord = 18
	onset = 00:00:55:000
	offset = 00:01:03:000
	value = FR, A, 4
00193                      ( ( ONSET> 4200 ) ( OFFSET> 4800 ) ( |<PARAM>| |T|  ) ( |<SUBSYS>| |A| ) ( |<VAL>| 26 ) ) 


Spreadsheet Variable Cell Definition:
	ord = 19
	onset = 00:01:03:000
	offset = 00:01:20:000
	value = FR, A, 3
00194                    )
00195                  )
00196                  ( VOCAB> ( ) )


Spreadsheet Variable Cell Definition:
	ord = 20
	onset = 00:01:10:000
	offset = 00:01:20:000
	value = T, A, 26
00197                )
00198              )
00199              ( |speechcode|
00200                (
00201                  (
00202                    CELLS>
00203                    (
00204                      ( ( ONSET>   60 ) ( OFFSET>  360 ) ( |<val>| ( |GOAL|     |+|   |+|   |+| ) ) ) 
00205                      ( ( ONSET>  420 ) ( OFFSET>  540 ) ( |<val>| ( |COMMAND|  |Sam| |Tom| +1  ) ) )


Spreadsheet Variable Cell Definition:
	ord = 1
	onset = 00:00:01:000
	offset = 00:00:06:000
	value = GOAL(+, +, +)
00206                      ( ( ONSET>  600 ) ( OFFSET>  660 ) ( |<val>| ( |ACKNOWL|  |Tom| |Sam| -1  ) ) ) 


Spreadsheet Variable Cell Definition:
	ord = 2
	onset = 00:00:07:000
	offset = 00:00:09:000
	value = COMMAND(Sam, Tom, 1)
00207                      ( ( ONSET>  660 ) ( OFFSET>  780 ) ( |<val>| ( |ANNOUNCE| |Sam| 0         ) ) ) 


Spreadsheet Variable Cell Definition:
	ord = 3
	onset = 00:00:10:000
	offset = 00:00:11:000
	value = ACKNOWL(Tom, Sam, -1)
00208                      ( ( ONSET>  780 ) ( OFFSET> 1260 ) ( |<val>| ( |ANNOUNCE| |Tom| 0         ) ) ) 


Spreadsheet Variable Cell Definition:
	ord = 4
	onset = 00:00:11:000
	offset = 00:00:13:000
	value = ANNOUNCE(Sam, 0)
00209                      ( ( ONSET> 1260 ) ( OFFSET> 1440 ) ( |<val>| ( |OBSERVE|  |Sam| 0         ) ) ) 


Spreadsheet Variable Cell Definition:
	ord = 5
	onset = 00:00:13:000
	offset = 00:00:21:000
	value = ANNOUNCE(Tom, 0)
00210                      ( ( ONSET> 1440 ) ( OFFSET> 1560 ) ( |<val>| ( |OBSERVE|  |Sam| 0         ) ) ) 


Spreadsheet Variable Cell Definition:
	ord = 6
	onset = 00:00:21:000
	offset = 00:00:24:000
	value = OBSERVE(Sam, 0)
00211                      ( ( ONSET> 1680 ) ( OFFSET> 1800 ) ( |<val>| ( |OBSERVE|  |Sam| 0         ) ) ) 


Spreadsheet Variable Cell Definition:
	ord = 7
	onset = 00:00:24:000
	offset = 00:00:26:000
	value = OBSERVE(Sam, 0)
00212                      ( ( ONSET> 1800 ) ( OFFSET> 1860 ) ( |<val>| ( |ANNOUNCE| |Sam| 0         ) ) ) 


Spreadsheet Variable Cell Definition:
	ord = 8
	onset = 00:00:28:000
	offset = 00:00:30:000
	value = OBSERVE(Sam, 0)
00213                      ( ( ONSET> 1920 ) ( OFFSET> 2040 ) ( |<val>| ( |COMMAND|  |Sam| |Tom| -1  ) ) ) 


Spreadsheet Variable Cell Definition:
	ord = 9
	onset = 00:00:30:000
	offset = 00:00:31:000
	value = ANNOUNCE(Sam, 0)
00214                      ( ( ONSET> 2160 ) ( OFFSET> 2220 ) ( |<val>| ( |ACKNOWL|  |Tom| |Sam| -1  ) ) ) 


Spreadsheet Variable Cell Definition:
	ord = 10
	onset = 00:00:32:000
	offset = 00:00:34:000
	value = COMMAND(Sam, Tom, -1)
00215                      ( ( ONSET> 2280 ) ( OFFSET> 2400 ) ( |<val>| ( |OBSERVE|  |Tom| -1        ) ) ) 


Spreadsheet Variable Cell Definition:
	ord = 11
	onset = 00:00:36:000
	offset = 00:00:37:000
	value = ACKNOWL(Tom, Sam, -1)
00216                      ( ( ONSET> 2460 ) ( OFFSET> 2520 ) ( |<val>| ( |REASON|   |Tom| 0         ) ) ) 


Spreadsheet Variable Cell Definition:
	ord = 12
	onset = 00:00:38:000
	offset = 00:00:40:000
	value = OBSERVE(Tom, -1)
00217                      ( ( ONSET> 2580 ) ( OFFSET> 2700 ) ( |<val>| ( |REASON|   |Tom| 0         ) ) ) 


Spreadsheet Variable Cell Definition:
	ord = 13
	onset = 00:00:41:000
	offset = 00:00:42:000
	value = REASON(Tom, 0)
00218                      ( ( ONSET> 2700 ) ( OFFSET> 2880 ) ( |<val>| ( |PREDICT|  |Tom| 0         ) ) ) 


Spreadsheet Variable Cell Definition:
	ord = 14
	onset = 00:00:43:000
	offset = 00:00:45:000
	value = REASON(Tom, 0)
00219                      ( ( ONSET> 2760 ) ( OFFSET> 2820 ) ( |<val>| ( |OBSERVE|  |Sam| 0         ) ) ) 


Spreadsheet Variable Cell Definition:
	ord = 15
	onset = 00:00:45:000
	offset = 00:00:48:000
	value = PREDICT(Tom, 0)
00220                      ( ( ONSET> 2880 ) ( OFFSET> 3000 ) ( |<val>| ( |OBSERVE|  |Tom| 0         ) ) ) 


Spreadsheet Variable Cell Definition:
	ord = 16
	onset = 00:00:46:000
	offset = 00:00:47:000
	value = OBSERVE(Sam, 0)
00221                      ( ( ONSET> 3000 ) ( OFFSET> 3120 ) ( |<val>| ( |OBSERVE|  |Tom| +1        ) ) ) 


Spreadsheet Variable Cell Definition:
	ord = 17
	onset = 00:00:48:000
	offset = 00:00:50:000
	value = OBSERVE(Tom, 0)
00222                      ( ( ONSET> 3120 ) ( OFFSET> 3180 ) ( |<val>| ( |ANNOUNCE| |Tom| 0         ) ) ) 


Spreadsheet Variable Cell Definition:
	ord = 18
	onset = 00:00:50:000
	offset = 00:00:52:000
	value = OBSERVE(Tom, 1)
00223                      ( ( ONSET> 3300 ) ( OFFSET> 3480 ) ( |<val>| ( |COMMAND|  |Sam| |Tom| +1  ) ) ) 


Spreadsheet Variable Cell Definition:
	ord = 19
	onset = 00:00:52:000
	offset = 00:00:53:000
	value = ANNOUNCE(Tom, 0)
00224                      ( ( ONSET> 3540 ) ( OFFSET> 3840 ) ( |<val>| ( |ACKNOWL|  |Tom| |Sam| -1  ) ) ) 


Spreadsheet Variable Cell Definition:
	ord = 20
	onset = 00:00:55:000
	offset = 00:00:58:000
	value = COMMAND(Sam, Tom, 1)
00225                      ( ( ONSET> 3840 ) ( OFFSET> 3960 ) ( |<val>| ( |ACKNOWL|  |Sam| |Tom| +1  ) ) ) 


Spreadsheet Variable Cell Definition:
	ord = 21
	onset = 00:00:59:000
	offset = 00:01:04:000
	value = ACKNOWL(Tom, Sam, -1)
00226                      ( ( ONSET> 4200 ) ( OFFSET> 4320 ) ( |<val>| ( |OBSERVE|  |Sam| 0         ) ) ) 


Spreadsheet Variable Cell Definition:
	ord = 22
	onset = 00:01:04:000
	offset = 00:01:06:000
	value = ACKNOWL(Sam, Tom, 1)
00227                      ( ( ONSET> 4500 ) ( OFFSET> 4680 ) ( |<val>| ( |ACKNOWL|  |Tom| |Sam| +1  ) ) ) 


Spreadsheet Variable Cell Definition:
	ord = 23
	onset = 00:01:10:000
	offset = 00:01:12:000
	value = OBSERVE(Sam, 0)
00228                    )
00229                  )
00230                  ( VOCAB> ( |GOAL| |COMMAND| |ACKNOWL| |ANNOUNCE| |OBSERVE| |REASON| |PREDICT| ) )


Spreadsheet Variable Cell Definition:
	ord = 24
	onset = 00:01:15:000
	offset = 00:01:18:000
	value = ACKNOWL(Tom, Sam, 1)
00231                )
00232              )
00233            )
00234          )
00235        )
00236      )
00237      (
00238        QUERY>
00239        (
00240          ( 
00241            |query| 
00242            ( 
00243              |or| 
00244              ( 
00245                |and| 
00246                ( |sys.var| |?ordsys| |?onsys| |?offsys| |V| |<SUBSYS>| |?v| ) 
00247                ( |state.var| |?ordstate| |?onstate| |?offstate| |H| |<SUBSYS>| |<VAL>| ) 
00248                ( |le| ( |minus| |?onstate| ( TIME> 600 ) ) |?onsys| ) 
00249                ( |ge| ( |minus| |?onstate| ( TIME> 300 ) ) |?onsys| ) 
00250              ) 
00251              ( 
00252                |and| 
00253                ( |sys.var| |?ordsys| |?onsys| |?offsys| |V| |<SUBSYS>| |?v| ) 
00254                ( |state.var| |?ordstate| |?onstate| |?offstate| |H| |<SUBSYS>| |<VAL>| ) 
00255                ( |ge| ( |minus| |?onstate| ( TIME> 300 ) ) |?offsys| ) 
00256                ( |le| ( |minus| |?onstate| ( TIME> 600 ) ) |?offsys| ) 
00257              ) 
00258              ( 
00259                |and| 
00260                ( |sys.var| |?ordsys| |?onsys| |?offsys| |V| |<SUBSYS>| |?v| ) 
00261                ( |state.var| |?ordstate| |?onstate| |?offstate| |H| |<SUBSYS>| |<VAL>| ) 
00262                ( |ge| ( |minus| |?onstate| ( TIME> 300 ) ) |?onsys| ) 
00263                ( |le| ( |minus| |?onstate| ( TIME> 600) ) |?offsys| ) 
00264              ) 
00265            ) 
00266            ( |print| |?ordstate| |?ordsys| |?v| ) 
00267          ) 
00268          ( 
00269            |query| 
00270            ( 


Spreadsheet Variable Cell Definition:
	ord = 1
	onset = 00:00:00:000
	offset = 00:00:00:000
	value = query(or(and(sys.var(?ordsys, ?onsys, ?offsys, V, <SUBSYS>, ?v), state.var(?ordstate, ?onstate, ?offstate, H, <SUBSYS>, <VAL>), le(minus(?onstate, 00:00:10:000), ?onsys), ge(minus(?onstate, 00:00:05:000), ?onsys), <arg5>, <arg6>, <arg7>), and(sys.var(?ordsys, ?onsys, ?offsys, V, <SUBSYS>, ?v), state.var(?ordstate, ?onstate, ?offstate, H, <SUBSYS>, <VAL>), ge(minus(?onstate, 00:00:05:000), ?offsys), le(minus(?onstate, 00:00:10:000), ?offsys), <arg5>, <arg6>, <arg7>), and(sys.var(?ordsys, ?onsys, ?offsys, V, <SUBSYS>, ?v), state.var(?ordstate, ?onstate, ?offstate, H, <SUBSYS>, <VAL>), ge(minus(?onstate, 00:00:05:000), ?onsys), le(minus(?onstate, 00:00:10:000), ?offsys), <arg5>, <arg6>, <arg7>), <arg4>, <arg5>, <arg6>, <arg7>), print(?ordstate, ?ordsys, ?v, <arg4>, <arg5>, <arg6>, <arg7>))
00271              |and| 
00272              ( |sys.var| |?ordsys| |?onsys| |?offsys| |V| |<SUBSYS>| |?a| ) 
00273              ( |ge| |?a| 21 ) 
00274              ( |state.var| |?ordstate| |?onstate| |<offset>| |?b| |?c| |?d| ) 
00275              ( |ge| |?onstate| |?onsys| ) 
00276              ( |le| |?onstate| |?offsys| ) 
00277            ) 
00278            ( |print| |?ordsys| |?a| |?ordstate| |?b| |?c| |?d| ) 
00279          ) 
00280          ( 
00281            |query| 
00282            ( 


Spreadsheet Variable Cell Definition:
	ord = 2
	onset = 00:00:00:000
	offset = 00:00:00:000
	value = query(and(sys.var(?ordsys, ?onsys, ?offsys, V, <SUBSYS>, ?a), ge(?a, 21), state.var(?ordstate, ?onstate, <offset>, ?b, ?c, ?d), ge(?onstate, ?onsys), le(?onstate, ?offsys), <arg6>, <arg7>), print(?ordsys, ?a, ?ordstate, ?b, ?c, ?d, <arg7>))
00283              |or| 
00284              ( 
00285                |and| 
00286                ( |sys.var| |?ordsys| |?onsys| |?offsys| |V| |<SUBSYS>| |?a| ) 
00287                ( |ge| |?a| 23 ) 
00288                ( |state.var| |?ordstate| |?onstate| |?offstate| |?b| |?c| |?d| ) 
00289                ( |ge| |?onstate| |?onsys| ) 
00290                ( |le| |?onstate| |?offsys| ) 
00291                |<arg6>| 
00292              ) 
00293              ( 
00294                |and| 
00295                ( |sys.var| |?ordsys| |?onsys| |?offsys| |V| |<SUBSYS>| |?a| ) 
00296                ( |ge| |?a| 23 ) 
00297                ( |state.var| |?ordstate| |?onstate| |?offstate| |?b| |?c| |?d| ) 
00298                ( |le| |?offstate| |?offsys| ) 
00299                ( |ge| |?offstate| |?onsys| ) 
00300              ) 
00301            ) 
00302            ( |print| |?ordsys| |?a| |?ordstate| |?b| |?c| |?d| ) 
00303          ) 
00304          ( 
00305            |query| 
00306            ( 


Spreadsheet Variable Cell Definition:
	ord = 3
	onset = 00:00:00:000
	offset = 00:00:00:000
	value = query(or(and(sys.var(?ordsys, ?onsys, ?offsys, V, <SUBSYS>, ?a), ge(?a, 23), state.var(?ordstate, ?onstate, ?offstate, ?b, ?c, ?d), ge(?onstate, ?onsys), le(?onstate, ?offsys), <arg6>, <arg7>), and(sys.var(?ordsys, ?onsys, ?offsys, V, <SUBSYS>, ?a), ge(?a, 23), state.var(?ordstate, ?onstate, ?offstate, ?b, ?c, ?d), le(?offstate, ?offsys), ge(?offstate, ?onsys), <arg6>, <arg7>), <arg3>, <arg4>, <arg5>, <arg6>, <arg7>), print(?ordsys, ?a, ?ordstate, ?b, ?c, ?d, <arg7>))
00307              |and| 
00308              ( |sys.var| |?ordsys| |?onsys| |?offsys| |V| |<SUBSYS>| |?v| ) 
00309              ( |state.var| |?ordstate| |?onstate| |?offstate| |H| |<SUBSYS>| |<VAL>| ) 
00310              ( |le| ( |minus| |?onstate| ( TIME> 300 ) ) |?offsys| ) 
00311              ( |ge| ( |minus| |?onstate| ( TIME> 300 ) ) |?onsys| ) 
00312              |<arg5>| 
00313            ) 
00314            ( |print| |?ordsys| |?ordstate| |?v| ) 
00315          ) 
00316          ( 
00317            |query| 
00318            ( 


Spreadsheet Variable Cell Definition:
	ord = 4
	onset = 00:00:00:000
	offset = 00:00:00:000
	value = query(and(sys.var(?ordsys, ?onsys, ?offsys, V, <SUBSYS>, ?v), state.var(?ordstate, ?onstate, ?offstate, H, <SUBSYS>, <VAL>), le(minus(?onstate, 00:00:05:000), ?offsys), ge(minus(?onstate, 00:00:05:000), ?onsys), <arg5>, <arg6>, <arg7>), print(?ordsys, ?ordstate, ?v, <arg4>, <arg5>, <arg6>, <arg7>))
00319              |or| 
00320              ( |speechcode| |<ord>| |<onset>| |<offset>| ( |COMMAND| |?sp| |<TO>| -1 ) ) 
00321              ( |speechcode| |<ord>| |<onset>| |<offset>| ( |ACKNOWL| |?sp| |<TO>| -1 ) ) 
00322              ( |speechcode| |<ord>| |<onset>| |<offset>| ( |ANNOUNCE| |?sp| -1 ) ) 
00323              ( |speechcode| |<ord>| |<onset>| |<offset>| ( |OBSERVE| |?sp| -1 ) ) 
00324              ( |speechcode| |<ord>| |<onset>| |<offset>| ( |REASON| |?sp| -1 ) ) 
00325              ( |speechcode| |<ord>| |<onset>| |<offset>| ( |PREDICT| |?sp| -1 ) ) 
00326            ) 
00327            ( |print| |?sp| ) 
00328          ) 
00329          ( 
00330            |query| 
00331            ( 


Spreadsheet Variable Cell Definition:
	ord = 5
	onset = 00:00:00:000
	offset = 00:00:00:000
	value = query(or(speechcode(<ord>, <onset>, <offset>, COMMAND(?sp, <TO>, -1)), speechcode(<ord>, <onset>, <offset>, ACKNOWL(?sp, <TO>, -1)), speechcode(<ord>, <onset>, <offset>, ANNOUNCE(?sp, -1)), speechcode(<ord>, <onset>, <offset>, OBSERVE(?sp, -1)), speechcode(<ord>, <onset>, <offset>, REASON(?sp, -1)), speechcode(<ord>, <onset>, <offset>, PREDICT(?sp, -1)), <arg7>), print(?sp, <arg2>, <arg3>, <arg4>, <arg5>, <arg6>, <arg7>))
00332              |and| 
00333              ( |speechcode| |?eord| |?eon| |?eoff| |?b| ) 
00334              ( |sys.var| |?sord| |?son| |?soff| |V| |<SUBSYS>| |?c| ) 
00335              ( |le| |?c| |23| ) 
00336              ( |ge| |?eon| |?son| ) 
00337              ( |le| |?eon| |?soff| ) 
00338            ) 
00339            ( |print| |?eord| |?b| |?c| ) 
00340          ) 
00341          ( 
00342            |query| 
00343            ( 


Spreadsheet Variable Cell Definition:
	ord = 6
	onset = 00:00:00:000
	offset = 00:00:00:000
	value = query(and(speechcode(?eord, ?eon, ?eoff, ?b), sys.var(?sord, ?son, ?soff, V, <SUBSYS>, ?c), le(?c, 23), ge(?eon, ?son), le(?eon, ?soff), <arg6>, <arg7>), print(?eord, ?b, ?c, <arg4>, <arg5>, <arg6>, <arg7>))
00344              |or| 
00345              ( 
00346                |and| 
00347                ( |sys.var| |?ordv| |?onv| |?offv| |V| |<SUBSYS>| |?val| ) 
00348                ( |state.var| |?ordh| |?onh| |?offh| |H| |<SUBSYS>| |<VAL>| ) 
00349                ( |ge| |?onv| ( |minus| |?onh| ( TIME> 600 ) ) ) 
00350                ( |le| |?onv| ( |minus| |?onh| ( TIME> 300 ) ) ) 
00351              ) 
00352              |<arg2>| 
00353              |<arg3>| 
00354              |<arg4>| 
00355            ) 
00356            ( |print| |?ordh| |?ordv| |?val| ) 
00357          ) 
00358          ( 
00359            |query| 
00360            ( 


Spreadsheet Variable Cell Definition:
	ord = 7
	onset = 00:00:00:000
	offset = 00:00:00:000
	value = query(or(and(sys.var(?ordv, ?onv, ?offv, V, <SUBSYS>, ?val), state.var(?ordh, ?onh, ?offh, H, <SUBSYS>, <VAL>), ge(?onv, minus(?onh, 00:00:10:000)), le(?onv, minus(?onh, 00:00:05:000)), <arg5>, <arg6>, <arg7>), <arg2>, <arg3>, <arg4>, <arg5>, <arg6>, <arg7>), print(?ordh, ?ordv, ?val, <arg4>, <arg5>, <arg6>, <arg7>))
00361              |or| 
00362              ( 
00363                |and| 
00364                ( |sys.var| |?ordv| |?onv| |?offv| |V| |<SUBSYS>| |?val| ) 
00365                ( |state.var| |?ordh| |?onh| |?offh| |H| |<SUBSYS>| |<VAL>| ) 
00366                ( |ge| |?onv| ( |minus| |?onh| ( TIME> 600 ) ) ) 
00367                ( |le| |?onv| ( |minus| |?onh| ( TIME> 300 ) ) ) 
00368              ) 
00369              ( 
00370                |and| 
00371                ( |sys.var| |?ordv| |?onv| |?offv| |V| |<SUBSYS>| |<VAL>| ) 
00372                ( |state.var| |?ordh| |?onh| |?offh| |H| |<SUBSYS>| |?val| ) 
00373                ( |le| |?offv| ( |minus| |?onh| ( TIME> 300 ) ) ) 
00374                ( |ge| |?offv| ( |minus| |?onh| ( TIME> 600 ) ) ) 
00375              ) 
00376            ) 
00377            ( |print| |?ordh| |?ordv| |?val| ) 
00378          ) 
00379          ( 
00380            |query| 
00381            ( |sys.var| |?ord1| |?on1| |?off1| |V| |<SUBSYS>| |<VAL>| ) 


Spreadsheet Variable Cell Definition:
	ord = 8
	onset = 00:00:00:000
	offset = 00:00:00:000
	value = query(or(and(sys.var(?ordv, ?onv, ?offv, V, <SUBSYS>, ?val), state.var(?ordh, ?onh, ?offh, H, <SUBSYS>, <VAL>), ge(?onv, minus(?onh, 00:00:10:000)), le(?onv, minus(?onh, 00:00:05:000)), <arg5>, <arg6>, <arg7>), and(sys.var(?ordv, ?onv, ?offv, V, <SUBSYS>, <VAL>), state.var(?ordh, ?onh, ?offh, H, <SUBSYS>, ?val), le(?offv, minus(?onh, 00:00:05:000)), ge(?offv, minus(?onh, 00:00:10:000)), <arg5>, <arg6>, <arg7>), <arg3>, <arg4>, <arg5>, <arg6>, <arg7>), print(?ordh, ?ordv, ?val, <arg4>, <arg5>, <arg6>, <arg7>))
00382            ( |print| |?ord1| |?on1| |?off1| ) 
00383          ) 
00384          ( 
00385            |query| 
00386            ( 


Spreadsheet Variable Cell Definition:
	ord = 9
	onset = 00:00:00:000
	offset = 00:00:00:000
	value = query(sys.var(?ord1, ?on1, ?off1, V, <SUBSYS>, <VAL>), print(?ord1, ?on1, ?off1, <arg4>, <arg5>, <arg6>, <arg7>))
00387              |and| 
00388              ( |sys.var| |?ordv| |?onv| |?offv| |V| |<SUBSYS>| |?v| ) 
00389              ( |state.var| |?ordh| |?onh| |?offh| |H| |<SUBSYS>| |<VAL>| ) 
00390              ( |le| |?onv| ( |plus| |?onh| ( TIME> 300 ) ) ) 
00391              ( |ge| |?offv| ( |plus| |?onh| ( TIME> 300 ) ) ) 
00392            ) 
00393            ( |print| |?ordv| |?ordh| |?v| ) 
00394          ) 
00395          ( 
00396            |query| 
00397            ( 


Spreadsheet Variable Cell Definition:
	ord = 10
	onset = 00:00:00:000
	offset = 00:00:00:000
	value = query(and(sys.var(?ordv, ?onv, ?offv, V, <SUBSYS>, ?v), state.var(?ordh, ?onh, ?offh, H, <SUBSYS>, <VAL>), le(?onv, plus(?onh, 00:00:05:000)), ge(?offv, plus(?onh, 00:00:05:000)), <arg5>, <arg6>, <arg7>), print(?ordv, ?ordh, ?v, <arg4>, <arg5>, <arg6>, <arg7>))
00398              |and| 
00399              ( |speechcode| |?orda| |?ona| |?offa| ( |ANNOUNCE| |<SPEAKER>| 0 ) ) 
00400              ( |speechcode| |?ordo| |?ono| |?offo| ( |OBSERVE| |<SPEAKER>| |<MITIGATION>| ) ) 
00401              ( |gt| |?ono| |?offa| ) 
00402              ( 
00403                |not| 
00404                ( 
00405                  |and| 
00406                  ( |speechcode| |<ord>| |?ono2| |?offo2| ( |OBSERVE| |<SPEAKER>| |<MITIGATION>| ) ) 
00407                  ( |gt| |?ono2| |?offa| ) 
00408                  ( |lt| |?ono2| |?ono| ) 
00409                ) 
00410              ) 
00411            ) 
00412            ( |print| |?orda| |?ordo| ) 
00413          ) 
00414          ( 
00415            |query| 
00416            ( 


Spreadsheet Variable Cell Definition:
	ord = 11
	onset = 00:00:00:000
	offset = 00:00:00:000
	value = query(and(speechcode(?orda, ?ona, ?offa, ANNOUNCE(<SPEAKER>, 0)), speechcode(?ordo, ?ono, ?offo, OBSERVE(<SPEAKER>, <MITIGATION>)), gt(?ono, ?offa), not(and(speechcode(<ord>, ?ono2, ?offo2, OBSERVE(<SPEAKER>, <MITIGATION>)), gt(?ono2, ?offa), lt(?ono2, ?ono), <arg4>, <arg5>, <arg6>, <arg7>)), <arg5>, <arg6>, <arg7>), print(?orda, ?ordo, <arg3>, <arg4>, <arg5>, <arg6>, <arg7>))
00417              |or| 
00418              ( |speechcode| |?o1| |<onset>| |<offset>| |?x| ) 
00419              ( |speechcode| |?o2| |<onset>| |<offset>| |?y| ) 
00420            ) 
00421            ( |print| |?x| ) 
00422          ) 
00423        )
00424      )
00425      ( SYSTEM>


Spreadsheet Variable Cell Definition:
	ord = 12
	onset = 00:00:00:000
	offset = 00:00:00:000
	value = query(or(speechcode(?o1, <onset>, <offset>, ?x), speechcode(?o2, <onset>, <offset>, ?y), <arg3>, <arg4>, <arg5>, <arg6>, <arg7>), print(?x, <arg2>, <arg3>, <arg4>, <arg5>, <arg6>, <arg7>))
00426        ( 
00427          (
00428            ; at present, the OpenSHAPA ODB file reader simply discards alignments.
00429            ; I am leaving this data in the test, as it does no harm, however
00430            ; should we ever start to support loading MacSHAPA alignements into
00431            ; into OpenSHAPA, this data will break the test (and give us a leg
00432            ; up on testing same).
00433            ALIGNMENTS>
00434            (
00435              (
00436                |&*=[^^an-alignment|
00437                (
00438                  ( TYPE>            <<MATRIX>> )
00439                  ( VARIABLE-LENGTH> FALSE  )
00440                  ( FORMAL-ARG-LIST> ( |<ord>| |<onset>| |<offset>| |<arg1>| |<arg2>| |<status>| ) )
00441                  ( COLUMN-WIDTH>    200 )
00442                  (
00443                    CELLS>
00444                    (
00445                      ( ( ONSET>  0 ) ( OFFSET>    0 ) ( |<arg1>| |speechcode| ) ( |<arg2>| |speechcode| ) ( |<status>| 1 ) )  
00446                      ( ( ONSET> 30 ) ( OFFSET>    0 ) ( |<arg1>| ":pred" )      ( |<arg2>| ":pred" )      ( |<status>| 0 ) ) 
00447                      ( ( ONSET> 60 ) ( OFFSET>    0 ) ( |<arg1>|  1 )           ( |<arg2>|  1 )           ( |<status>| 0 ) ) 
00448                      ( ( ONSET> 60 ) ( OFFSET>    0 ) ( |<arg1>|  2 )           ( |<arg2>|  2 )           ( |<status>| 0 ) ) 
00449                      ( ( ONSET> 60 ) ( OFFSET>    0 ) ( |<arg1>|  3 )           ( |<arg2>|  3 )           ( |<status>| 0 ) ) 
00450                      ( ( ONSET> 60 ) ( OFFSET>    0 ) ( |<arg1>|  4 )           ( |<arg2>|  4 )           ( |<status>| 0 ) ) 
00451                      ( ( ONSET> 60 ) ( OFFSET>    0 ) ( |<arg1>|  5 )           ( |<arg2>|  5 )           ( |<status>| 0 ) ) 
00452                      ( ( ONSET> 60 ) ( OFFSET>    0 ) ( |<arg1>|  6 )           ( |<arg2>|  6 )           ( |<status>| 0 ) ) 
00453                      ( ( ONSET> 60 ) ( OFFSET>    0 ) ( |<arg1>|  7 )           ( |<arg2>|  7 )           ( |<status>| 0 ) ) 
00454                      ( ( ONSET> 60 ) ( OFFSET>    0 ) ( |<arg1>|  8 )           ( |<arg2>|  8 )           ( |<status>| 0 ) ) 
00455                      ( ( ONSET> 60 ) ( OFFSET>    0 ) ( |<arg1>|  9 )           ( |<arg2>|  9 )           ( |<status>| 0 ) ) 
00456                      ( ( ONSET> 60 ) ( OFFSET>    0 ) ( |<arg1>| 10 )           ( |<arg2>| 10 )           ( |<status>| 0 ) ) 
00457                      ( ( ONSET> 60 ) ( OFFSET>    0 ) ( |<arg1>| 11 )           ( |<arg2>| 11 )           ( |<status>| 0 ) ) 
00458                      ( ( ONSET> 60 ) ( OFFSET>    0 ) ( |<arg1>| 12 )           ( |<arg2>| 12 )           ( |<status>| 0 ) ) 
00459                      ( ( ONSET> 60 ) ( OFFSET>    0 ) ( |<arg1>| 13 )           ( |<arg2>| 13 )           ( |<status>| 0 ) ) 
00460                      ( ( ONSET> 60 ) ( OFFSET>    0 ) ( |<arg1>| 14 )           ( |<arg2>| 14 )           ( |<status>| 0 ) ) 
00461                      ( ( ONSET> 60 ) ( OFFSET>    0 ) ( |<arg1>| 15 )           ( |<arg2>| 15 )           ( |<status>| 0 ) ) 
00462                      ( ( ONSET> 60 ) ( OFFSET>    0 ) ( |<arg1>| 16 )           ( |<arg2>| 16 )           ( |<status>| 0 ) ) 
00463                      ( ( ONSET> 60 ) ( OFFSET>    0 ) ( |<arg1>| 17 )           ( |<arg2>| 17 )           ( |<status>| 0 ) ) 
00464                      ( ( ONSET> 60 ) ( OFFSET>    0 ) ( |<arg1>| 18 )           ( |<arg2>| 18 )           ( |<status>| 0 ) ) 
00465                      ( ( ONSET> 60 ) ( OFFSET>    0 ) ( |<arg1>| 19 )           ( |<arg2>| 19 )           ( |<status>| 0 ) ) 
00466                      ( ( ONSET> 60 ) ( OFFSET>    0 ) ( |<arg1>| 20 )           ( |<arg2>| 20 )           ( |<status>| 0 ) ) 
00467                      ( ( ONSET> 60 ) ( OFFSET>    0 ) ( |<arg1>| 21 )           ( |<arg2>| 21 )           ( |<status>| 0 ) ) 
00468                      ( ( ONSET> 60 ) ( OFFSET>    0 ) ( |<arg1>| 22 )           ( |<arg2>| 22 )           ( |<status>| 0 ) ) 
00469                      ( ( ONSET> 60 ) ( OFFSET>    0 ) ( |<arg1>| 23 )           ( |<arg2>| 23 )           ( |<status>| 0 ) ) 
00470                      ( ( ONSET> 60 ) ( OFFSET>    0 ) ( |<arg1>| 24 )           ( |<arg2>| 24 )           ( |<status>| 0 ) ) 
00471                    )
00472                  )
00473                )
00474              )
00475              (
00476                |&*=[^^another-alignment|
00477                (
00478                  ( TYPE>            <<MATRIX>> )
00479                  ( VARIABLE-LENGTH> FALSE  )
00480                  ( FORMAL-ARG-LIST> ( |<ord>| |<onset>| |<offset>| |<arg1>| |<arg2>| |<status>| ) )
00481                  ( COLUMN-WIDTH>    200 )
00482                  (
00483                    CELLS>
00484                    (
00485                      ( ( ONSET>  0 ) ( OFFSET>    0 ) ( |<arg1>| |state.var| ) ( |<arg2>| |state.var| ) ( |<status>| 1 ) ) 
00486                      ( ( ONSET> 30 ) ( OFFSET>    0 ) ( |<arg1>| ":<PARAM>" )  ( |<arg2>| ":<PARAM>" )  ( |<status>| 0 ) ) 
00487                      ( ( ONSET> 60 ) ( OFFSET>    0 ) ( |<arg1>| 1 )           ( |<arg2>| 1 )           ( |<status>| 0 ) ) 
00488                      ( ( ONSET> 60 ) ( OFFSET>    0 ) ( |<arg1>| 2 )           ( |<arg2>| 2 )           ( |<status>| 0 ) ) 
00489                      ( ( ONSET> 60 ) ( OFFSET>    0 ) ( |<arg1>| 3 )           ( |<arg2>| 3 )           ( |<status>| 0 ) ) 
00490                      ( ( ONSET> 60 ) ( OFFSET>    0 ) ( |<arg1>| 4 )           ( |<arg2>| 4 )           ( |<status>| 0 ) ) 
00491                      ( ( ONSET> 60 ) ( OFFSET>    0 ) ( |<arg1>| 5 )           ( |<arg2>| 5 )           ( |<status>| 0 ) ) 
00492                      ( ( ONSET> 60 ) ( OFFSET>    0 ) ( |<arg1>| 6 )           ( |<arg2>| 6 )           ( |<status>| 0 ) ) 
00493                      ( ( ONSET> 60 ) ( OFFSET>    0 ) ( |<arg1>| 7 )           ( |<arg2>| 7 )           ( |<status>| 0 ) ) 
00494                      ( ( ONSET> 60 ) ( OFFSET>    0 ) ( |<arg1>| 8 )           ( |<arg2>| 8 )           ( |<status>| 0 ) ) 
00495                      ( ( ONSET> 60 ) ( OFFSET>    0 ) ( |<arg1>| 9 )           ( |<arg2>| 9 )           ( |<status>| 0 ) ) 
00496                    )
00497                  )
00498                )
00499              )
00500            )
00501          )
00502          (
00503            SHAPA-PANE-VARS>
00504            (
00505              |verbal|
00506              |speechcode|
00507              |state.var|
00508              |sys.var|
00509            )
00510          )
00511          (
00512            ; at present, the OpenSHAPA ODB file reader simply discards groups.
00513            ; I am leaving this data in the test, as it does no harm, however
00514            ; should we ever start to support loading MacSHAPA groups into
00515            ; into OpenSHAPA, this data will break the test (and give us a leg
00516            ; up on testing same).
00517            GROUPS>
00518            (
00519              ( ( |verbal|  1 ) ( |speechcode|  1 ) )
00520              ( ( |verbal|  2 ) ( |speechcode|  2 ) )
00521              ( ( |verbal|  3 ) ( |speechcode|  3 ) )
00522              ( ( |verbal|  4 ) ( |speechcode|  4 ) )
00523              ( ( |verbal|  5 ) ( |speechcode|  5 ) )
00524              ( ( |verbal|  6 ) ( |speechcode|  6 ) )
00525              ( ( |verbal|  7 ) ( |speechcode|  7 ) )
00526              ( ( |verbal|  8 ) ( |speechcode|  8 ) )
00527              ( ( |verbal|  9 ) ( |speechcode|  9 ) )
00528              ( ( |verbal| 10 ) ( |speechcode| 10 ) )
00529              ( ( |verbal| 11 ) ( |speechcode| 11 ) )
00530              ( ( |verbal| 12 ) ( |speechcode| 12 ) )
00531              ( ( |verbal| 13 ) ( |speechcode| 13 ) )
00532              ( ( |verbal| 14 ) ( |speechcode| 14 ) )
00533              ( ( |verbal| 15 ) ( |speechcode| 15 ) )
00534              ( ( |verbal| 16 ) ( |speechcode| 16 ) )
00535              ( ( |verbal| 17 ) ( |speechcode| 17 ) )
00536              ( ( |verbal| 18 ) ( |speechcode| 18 ) )
00537              ( ( |verbal| 19 ) ( |speechcode| 19 ) )
00538              ( ( |verbal| 20 ) ( |speechcode| 20 ) )
00539              ( ( |verbal| 21 ) ( |speechcode| 21 ) )
00540              ( ( |verbal| 22 ) ( |speechcode| 22 ) )
00541              ( ( |verbal| 23 ) ( |speechcode| 24 ) ( |speechcode| 23 ) ( |sys.var| 20 ) ( |verbal| 24 ) )
00542            )
00543          )
00544          (
00545            ; at present, the OpenSHAPA ODB file reader simply discards import
00546            ; format data.
00547            ;
00548            ; I am leaving this data in the test, as it does no harm.  However
00549            ; should we ever start to support loading MacSHAPA groups into
00550            ; into OpenSHAPA, this data will break the test (and give us a leg
00551            ; up on testing same).
00552            IMPORT-FORMATS-LIST>
00553            (
00554              (
00555                "untitled"
00556                (
00557                  (
00558                    IMPORT-PRODUCTION-LIST>
00559                    (
00560                      ( ( NAME> "record" ) ( PATTERN> "" ) ( HARD-PREC> 0 ) ( IS-SHOWN> TRUE ) ( IS-TRACED> FALSE ) ( INSERT-ACTIONS> ( ( ( VAR> "" ) ( ONSET> "" ) ( OFFSET> "" ) ( VAL> "" ) ) ) ) )
00561                    )
00562                  )
00563                )
00564              )
00565              (
00566                "general.fmt"
00567                (
00568                  (
00569                    IMPORT-PRODUCTION-LIST>
00570                    (
00571                      ( ( NAME> "file"       ) ( PATTERN> "records"                                       ) ( HARD-PREC> 0 ) ( IS-SHOWN> FALSE ) ( IS-TRACED> FALSE ) ( PROGRAM-ACTIONS> ( ( ( TEXT> "return 0;" ) ) ) ) )
00572                      ( ( NAME> "records"    ) ( PATTERN> "record"                                        ) ( HARD-PREC> 0 ) ( IS-SHOWN> FALSE ) ( IS-TRACED> FALSE ) ( PROGRAM-ACTIONS> ( ( ( TEXT> "return 0;" ) ) ) ) )
00573                      ( ( NAME> "records"    ) ( PATTERN> "records record"                                ) ( HARD-PREC> 0 ) ( IS-SHOWN> FALSE ) ( IS-TRACED> FALSE ) ( PROGRAM-ACTIONS> ( ( ( TEXT> "return 0;" ) ) ) ) )
00574                      ( ( NAME> "record"     ) ( PATTERN> ""                                              ) ( HARD-PREC> 0 ) ( IS-SHOWN> TRUE  ) ( IS-TRACED> FALSE ) ( INSERT-ACTIONS> ( ( ( VAR> "" ) ( ONSET> "" ) ( OFFSET> "" ) ( VAL> "" ) ) ) ) )
00575                      ( ( NAME> "tab"        ) ( PATTERN> "\"\\t\""                                       ) ( HARD-PREC> 0 ) ( IS-SHOWN> FALSE ) ( IS-TRACED> FALSE ) ( PROGRAM-ACTIONS> ( ( ( TEXT> "return 0;" ) ) ) ) )
00576                      ( ( NAME> "space"      ) ( PATTERN> "\" \""                                         ) ( HARD-PREC> 0 ) ( IS-SHOWN> FALSE ) ( IS-TRACED> FALSE ) ( PROGRAM-ACTIONS> ( ( ( TEXT> "return 0;" ) ) ) ) )
00577                      ( ( NAME> "comma"      ) ( PATTERN> "\",\""                                         ) ( HARD-PREC> 0 ) ( IS-SHOWN> FALSE ) ( IS-TRACED> FALSE ) ( PROGRAM-ACTIONS> ( ( ( TEXT> "return 0;" ) ) ) ) )
00578                      ( ( NAME> "return"     ) ( PATTERN> "\"\\n\""                                       ) ( HARD-PREC> 0 ) ( IS-SHOWN> FALSE ) ( IS-TRACED> FALSE ) ( PROGRAM-ACTIONS> ( ( ( TEXT> "return 0;" ) ) ) ) )
00579                      ( ( NAME> "hmst60"     ) ( PATTERN> "DIGITS \":\" DIGITS \":\" DIGITS \":\" DIGITS" ) ( HARD-PREC> 0 ) ( IS-SHOWN> FALSE ) ( IS-TRACED> FALSE ) ( PROGRAM-ACTIONS> ( ( ( TEXT> "ticks=$1 * (60 * 60 * 60) + $3 * (60 * 60) + $5 * 60 + $7;
00580  return ticks;" ) ) ) ) )
00581                      ( ( NAME> "hmsf30"     ) ( PATTERN> "DIGITS \":\" DIGITS \":\" DIGITS \":\" DIGITS" ) ( HARD-PREC> 0 ) ( IS-SHOWN> FALSE ) ( IS-TRACED> FALSE ) ( PROGRAM-ACTIONS> ( ( ( TEXT> "ticks=$1 * (60 * 60 * 60) + $3 * (60 * 60) + $5 * 60 + $7 * 2;
00582  return ticks;" ) ) ) ) )
00583                      ( ( NAME> "hmsf25"     ) ( PATTERN> "DIGITS \":\" DIGITS \":\" DIGITS \":\" DIGITS" ) ( HARD-PREC> 0 ) ( IS-SHOWN> FALSE ) ( IS-TRACED> FALSE ) ( PROGRAM-ACTIONS> ( ( ( TEXT> "ticks=$1 * (60 * 60 * 60) + $3 * (60 * 60) + $5 * 60 + $7 * 2.4;
00584  return ticks;" ) ) ) ) )
00585                      ( ( NAME> "hms"        ) ( PATTERN> "DIGITS \":\" DIGITS \":\" DIGITS"              ) ( HARD-PREC> 0 ) ( IS-SHOWN> FALSE ) ( IS-TRACED> FALSE ) ( PROGRAM-ACTIONS> ( ( ( TEXT> "ticks=$1 * (60 * 60 * 60) + $3 * (60 * 60) + $5 * 60;
00586  return ticks;" ) ) ) ) )
00587                      ( ( NAME> "seconds"    ) ( PATTERN> "DIGITS"                                        ) ( HARD-PREC> 0 ) ( IS-SHOWN> FALSE ) ( IS-TRACED> FALSE ) ( PROGRAM-ACTIONS> ( ( ( TEXT> "ticks=$1 * 60;
00588  return ticks;" ) ) ) ) )
00589                      ( ( NAME> "frame30"    ) ( PATTERN> "DIGITS"                                        ) ( HARD-PREC> 0 ) ( IS-SHOWN> FALSE ) ( IS-TRACED> FALSE ) (  PROGRAM-ACTIONS> ( ( ( TEXT> "ticks=$1 * 2;
00590  return ticks;" ) ) ) ) )
00591                      ( ( NAME> "frame25"    ) ( PATTERN> "DIGITS"                                        ) ( HARD-PREC> 0 ) ( IS-SHOWN> FALSE ) ( IS-TRACED> FALSE ) ( PROGRAM-ACTIONS> ( ( ( TEXT> "ticks=$1 * 2.4;
00592  return ticks;" ) ) ) ) )
00593                      ( ( NAME> "ticks"      ) ( PATTERN> "DIGITS"                                        ) ( HARD-PREC> 0 ) ( IS-SHOWN> FALSE ) ( IS-TRACED> FALSE ) (  PROGRAM-ACTIONS> ( ( ( TEXT> "return $1;" ) ) ) ) )
00594                      ( ( NAME> "text"       ) ( PATTERN> "text textChar"                                 ) ( HARD-PREC> 0 ) ( IS-SHOWN> FALSE ) ( IS-TRACED> FALSE ) ( PROGRAM-ACTIONS> ( ( ( TEXT> "textString=concat($1,$2);
00595  return textString;" ) ) ) ) )
00596                      ( ( NAME> "text"       ) ( PATTERN> "textChar"                                      ) ( HARD-PREC> 0 ) ( IS-SHOWN> FALSE ) ( IS-TRACED> FALSE ) ( PROGRAM-ACTIONS> ( ( ( TEXT> "return $1;" ) ) ) ) )
00597                      ( ( NAME> "textChar"   ) ( PATTERN> "ALPHA"                                         ) ( HARD-PREC> 0 ) ( IS-SHOWN> FALSE ) ( IS-TRACED> FALSE ) ( PROGRAM-ACTIONS> ( ( ( TEXT> "return $1" ) ) ) ) )
00598                      ( ( NAME> "textChar"   ) ( PATTERN> "DIGITS"                                        ) ( HARD-PREC> 0 ) ( IS-SHOWN> FALSE ) ( IS-TRACED> FALSE ) ( PROGRAM-ACTIONS> ( ( ( TEXT> "return $1;" ) ) ) ) )
00599                      ( ( NAME> "textChar"   ) ( PATTERN> "punc"                                          ) ( HARD-PREC> 0 ) ( IS-SHOWN> FALSE ) ( IS-TRACED> FALSE ) ( PROGRAM-ACTIONS> ( ( ( TEXT> "return $1;" ) ) ) ) )
00600                      ( ( NAME> "textChar"   ) ( PATTERN> "textPunc"                                      ) ( HARD-PREC> 0 ) ( IS-SHOWN> FALSE ) ( IS-TRACED> FALSE ) ( PROGRAM-ACTIONS> ( ( ( TEXT> "return $1;" ) ) ) ) )
00601                      ( ( NAME> "nominal"    ) ( PATTERN> "nominal nomChar"                               ) ( HARD-PREC> 0 ) ( IS-SHOWN> FALSE ) ( IS-TRACED> FALSE ) ( PROGRAM-ACTIONS> ( ( ( TEXT> "nomString=concat($1,$2);
00602  return nomString;" ) ) ) ) )
00603                      ( ( NAME> "nominal"    ) ( PATTERN> "nomChar"                                       ) ( HARD-PREC> 0 ) ( IS-SHOWN> FALSE ) ( IS-TRACED> FALSE ) ( PROGRAM-ACTIONS> ( ( ( TEXT> "return $1;" ) ) ) ) )
00604                      ( ( NAME> "nomChar"    ) ( PATTERN> "ALPHA"                                         ) ( HARD-PREC> 0 ) ( IS-SHOWN> FALSE ) ( IS-TRACED> FALSE ) ( PROGRAM-ACTIONS> ( ( ( TEXT> "return $1;" ) ) ) ) )
00605                      ( ( NAME> "nomChar"    ) ( PATTERN> "DIGITS"                                        ) ( HARD-PREC> 0 ) ( IS-SHOWN> FALSE ) ( IS-TRACED> FALSE ) ( PROGRAM-ACTIONS> ( ( ( TEXT> "return $1;" ) ) ) ) )
00606                      ( ( NAME> "nomChar"    ) ( PATTERN> "punc"                                          ) ( HARD-PREC> 0 ) ( IS-SHOWN> FALSE ) ( IS-TRACED> FALSE ) ( PROGRAM-ACTIONS> ( ( ( TEXT> "return $1;" ) ) ) ) )
00607                      ( ( NAME> "nomChar"    ) ( PATTERN> "nomPunc"                                       ) ( HARD-PREC> 0 ) ( IS-SHOWN> FALSE ) ( IS-TRACED> FALSE ) ( PROGRAM-ACTIONS> ( ( ( TEXT> "return $1;" ) ) ) ) )
00608                      ( ( NAME> "NOTE"       ) ( PATTERN> "\"\\t\""                                       ) ( HARD-PREC> 0 ) ( IS-SHOWN> FALSE ) ( IS-TRACED> FALSE ) ( PROGRAM-ACTIONS> ( ( ( TEXT> "n=\"  If you want to include tabs in the definition of text or      \";
00609  n=\"  nominal,  then change left hand side of this rule from      \";
00610  n=\"            NOTE         to     textChar or nomChar                  \";
00611  
00612  return $1;" ) ) ) ) )
00613                      ( ( NAME> "NOTE"       ) ( PATTERN> "\",\""                                         ) ( HARD-PREC> 0 ) ( IS-SHOWN> FALSE ) ( IS-TRACED> FALSE ) ( PROGRAM-ACTIONS> ( ( ( TEXT> "n=\"  If you want to include commas in the definition of           \";
00614  n=\"  nominals or arguments, then change left hand side          \";
00615  n=\"  of this rule from                                                                \";
00616  n=\"            NOTE         to     nomChar or argChar                   \";
00617  
00618  return \"_\";" ) ) ) ) )
00619                      ( ( NAME> "argument"   ) ( PATTERN> "argument argChar"                              ) ( HARD-PREC> 0 ) ( IS-SHOWN> FALSE ) ( IS-TRACED> FALSE ) ( PROGRAM-ACTIONS> ( ( ( TEXT> "argString=concat($1,$2);
00620  return argString;" ) ) ) ) )
00621                      ( ( NAME> "argument"   ) ( PATTERN> "argChar"                                       ) ( HARD-PREC> 0 ) ( IS-SHOWN> FALSE ) ( IS-TRACED> FALSE ) ( PROGRAM-ACTIONS> ( ( ( TEXT> "return $1;" ) ) ) ) )
00622                      ( ( NAME> "argChar"    ) ( PATTERN> "ALPHA"                                         ) ( HARD-PREC> 0 ) ( IS-SHOWN> FALSE ) ( IS-TRACED> FALSE ) ( PROGRAM-ACTIONS> ( ( ( TEXT> "return $1;" ) ) ) ) )
00623                      ( ( NAME> "argChar"    ) ( PATTERN> "DIGITS"                                        ) ( HARD-PREC> 0 ) ( IS-SHOWN> FALSE ) ( IS-TRACED> FALSE ) ( PROGRAM-ACTIONS> ( ( ( TEXT> "return $1;" ) ) ) ) )
00624                      ( ( NAME> "argChar"    ) ( PATTERN> "punc"                                          ) ( HARD-PREC> 0 ) ( IS-SHOWN> FALSE ) ( IS-TRACED> FALSE ) ( PROGRAM-ACTIONS> ( ( ( TEXT> "return $1;" ) ) ) ) )
00625                      ( ( NAME> "argChar"    ) ( PATTERN> "argPunc"                                       ) ( HARD-PREC> 0 ) ( IS-SHOWN> FALSE ) ( IS-TRACED> FALSE ) ( PROGRAM-ACTIONS> ( ( ( TEXT> "return $1;" ) ) ) ) )
00626                      ( ( NAME> "integer"    ) ( PATTERN> "posInt"                                        ) ( HARD-PREC> 0 ) ( IS-SHOWN> FALSE ) ( IS-TRACED> FALSE ) ( PROGRAM-ACTIONS> ( ( ( TEXT> "return $1;" ) ) ) ) )
00627                      ( ( NAME> "integer"    ) ( PATTERN> "negInt"                                        ) ( HARD-PREC> 0 ) ( IS-SHOWN> FALSE ) ( IS-TRACED> FALSE ) ( PROGRAM-ACTIONS> ( ( ( TEXT> "return $1;" ) ) ) ) )
00628                      ( ( NAME> "posInt"     ) ( PATTERN> "DIGITS"                                        ) ( HARD-PREC> 0 ) ( IS-SHOWN> FALSE ) ( IS-TRACED> FALSE ) ( PROGRAM-ACTIONS> ( ( ( TEXT> "return $1;" ) ) ) ) )
00629                      ( ( NAME> "negInt"     ) ( PATTERN> "\"-\" DIGITS"                                  ) ( HARD-PREC> 0 ) ( IS-SHOWN> FALSE ) ( IS-TRACED> FALSE ) ( PROGRAM-ACTIONS> ( ( ( TEXT> "i=concat($1,$2);
00630  return i;" ) ) ) ) )
00631                      ( ( NAME> "float"      ) ( PATTERN> "posInt"                                        ) ( HARD-PREC> 0 ) ( IS-SHOWN> FALSE ) ( IS-TRACED> FALSE ) ( PROGRAM-ACTIONS> ( ( ( TEXT> "f=concat($1,\".0\");
00632  return f;" ) ) ) ) )
00633                      ( ( NAME> "float"      ) ( PATTERN> "DIGITS \".\""                                  ) ( HARD-PREC> 0 ) ( IS-SHOWN> FALSE ) ( IS-TRACED> FALSE ) ( PROGRAM-ACTIONS> ( ( ( TEXT> "f=concat($1,$2,\"0\");
00634  return f;" ) ) ) ) )
00635                      ( ( NAME> "float"      ) ( PATTERN> "DIGITS \".\" DIGITS"                           ) ( HARD-PREC> 0 ) ( IS-SHOWN> FALSE ) ( IS-TRACED> FALSE ) ( PROGRAM-ACTIONS> ( ( ( TEXT> "f=concat($1,$2,$3);
00636  return f;" ) ) ) ) )
00637                      ( ( NAME> "float"      ) ( PATTERN> "\".\" DIGITS"                                  ) ( HARD-PREC> 0 ) ( IS-SHOWN> FALSE ) ( IS-TRACED> FALSE ) ( PROGRAM-ACTIONS> ( ( ( TEXT> "f=concat(\"0\",$1,$2);
00638  return f;" ) ) ) ) )
00639                      ( ( NAME> "float"      ) ( PATTERN> "\"-\" float"                                   ) ( HARD-PREC> 0 ) ( IS-SHOWN> FALSE ) ( IS-TRACED> FALSE ) ( PROGRAM-ACTIONS> ( ( ( TEXT> "f=concat($1,$2);
00640  return f;" ) ) ) ) )
00641                      ( ( NAME> "punc"       ) ( PATTERN> "\" \""                                         ) ( HARD-PREC> 0 ) ( IS-SHOWN> FALSE ) ( IS-TRACED> FALSE ) ( PROGRAM-ACTIONS> ( ( ( TEXT> "return $1;" ) ) ) ) )
00642                      ( ( NAME> "punc"       ) ( PATTERN> "\"~\""                                         ) ( HARD-PREC> 0 ) ( IS-SHOWN> FALSE ) ( IS-TRACED> FALSE ) ( PROGRAM-ACTIONS> ( ( ( TEXT> "return $1;" ) ) ) ) )
00643                      ( ( NAME> "punc"       ) ( PATTERN> "\"`\""                                         ) ( HARD-PREC> 0 ) ( IS-SHOWN> FALSE ) ( IS-TRACED> FALSE ) ( PROGRAM-ACTIONS> ( ( ( TEXT> "return $1;" ) ) ) ) )
00644                      ( ( NAME> "punc"       ) ( PATTERN> "\"!\""                                         ) ( HARD-PREC> 0 ) ( IS-SHOWN> FALSE ) ( IS-TRACED> FALSE ) ( PROGRAM-ACTIONS> ( ( ( TEXT> "return $1;" ) ) ) ) )
00645                      ( ( NAME> "punc"       ) ( PATTERN> "\"@\""                                         ) ( HARD-PREC> 0 ) ( IS-SHOWN> FALSE ) ( IS-TRACED> FALSE ) ( PROGRAM-ACTIONS> ( ( ( TEXT> "return $1;" ) ) ) ) )
00646                      ( ( NAME> "punc"       ) ( PATTERN> "\"#\""                                         ) ( HARD-PREC> 0 ) ( IS-SHOWN> FALSE ) ( IS-TRACED> FALSE ) ( PROGRAM-ACTIONS> ( ( ( TEXT> "return $1;" ) ) ) ) )
00647                      ( ( NAME> "punc"       ) ( PATTERN> "\"$\""                                         ) ( HARD-PREC> 0 ) ( IS-SHOWN> FALSE ) ( IS-TRACED> FALSE ) ( PROGRAM-ACTIONS> ( ( ( TEXT> "return $1;" ) ) ) ) )
00648                      ( ( NAME> "punc"       ) ( PATTERN> "\"%\""                                         ) ( HARD-PREC> 0 ) ( IS-SHOWN> FALSE ) ( IS-TRACED> FALSE ) ( PROGRAM-ACTIONS> ( ( ( TEXT> "return $1;" ) ) ) ) )
00649                      ( ( NAME> "punc"       ) ( PATTERN> "\"^\""                                         ) ( HARD-PREC> 0 ) ( IS-SHOWN> FALSE ) ( IS-TRACED> FALSE ) ( PROGRAM-ACTIONS> ( ( ( TEXT> "return $1;" ) ) ) ) )
00650                      ( ( NAME> "punc"       ) ( PATTERN> "\"&\""                                         ) ( HARD-PREC> 0 ) ( IS-SHOWN> FALSE ) ( IS-TRACED> FALSE ) ( PROGRAM-ACTIONS> ( ( ( TEXT> "return $1;" ) ) ) ) )
00651                      ( ( NAME> "punc"       ) ( PATTERN> "\"*\""                                         ) ( HARD-PREC> 0 ) ( IS-SHOWN> FALSE ) ( IS-TRACED> FALSE ) ( PROGRAM-ACTIONS> ( ( ( TEXT> "return $1;" ) ) ) ) )
00652                      ( ( NAME> "punc"       ) ( PATTERN> "\"_\""                                         ) ( HARD-PREC> 0 ) ( IS-SHOWN> FALSE ) ( IS-TRACED> FALSE ) ( PROGRAM-ACTIONS> ( ( ( TEXT> "return $1;" ) ) ) ) )
00653                      ( ( NAME> "punc"       ) ( PATTERN> "\"-\""                                         ) ( HARD-PREC> 0 ) ( IS-SHOWN> FALSE ) ( IS-TRACED> FALSE ) ( PROGRAM-ACTIONS> ( ( ( TEXT> "return $1;" ) ) ) ) )
00654                      ( ( NAME> "punc"       ) ( PATTERN> "\"+\""                                         ) ( HARD-PREC> 0 ) ( IS-SHOWN> FALSE ) ( IS-TRACED> FALSE ) ( PROGRAM-ACTIONS> ( ( ( TEXT> "return $1;" ) ) ) ) )
00655                      ( ( NAME> "punc"       ) ( PATTERN> "\"=\""                                         ) ( HARD-PREC> 0 ) ( IS-SHOWN> FALSE ) ( IS-TRACED> FALSE ) ( PROGRAM-ACTIONS> ( ( ( TEXT> "return $1;" ) ) ) ) )
00656                      ( ( NAME> "punc"       ) ( PATTERN> "\"{\""                                         ) ( HARD-PREC> 0 ) ( IS-SHOWN> FALSE ) ( IS-TRACED> FALSE ) ( PROGRAM-ACTIONS> ( ( ( TEXT> "return $1;" ) ) ) ) )
00657                      ( ( NAME> "punc"       ) ( PATTERN> "\"}\""                                         ) ( HARD-PREC> 0 ) ( IS-SHOWN> FALSE ) ( IS-TRACED> FALSE ) ( PROGRAM-ACTIONS> ( ( ( TEXT> "return $1;" ) ) ) ) )
00658                      ( ( NAME> "punc"       ) ( PATTERN> "\"[\""                                         ) ( HARD-PREC> 0 ) ( IS-SHOWN> FALSE ) ( IS-TRACED> FALSE ) ( PROGRAM-ACTIONS> ( ( ( TEXT> "return $1;" ) ) ) ) )
00659                      ( ( NAME> "punc"       ) ( PATTERN> "\"]\""                                         ) ( HARD-PREC> 0 ) ( IS-SHOWN> FALSE ) ( IS-TRACED> FALSE ) ( PROGRAM-ACTIONS> ( ( ( TEXT> "return $1;" ) ) ) ) )
00660                      ( ( NAME> "punc"       ) ( PATTERN> "\"\\\\\""                                      ) ( HARD-PREC> 0 ) ( IS-SHOWN> FALSE ) ( IS-TRACED> FALSE ) ( PROGRAM-ACTIONS> ( ( ( TEXT> "NOTE=\"  Two backslashes is the only way to get the             \";
00661  NOTE=\"  backslash character itself.                                        \";
00662  
00663  return $1;" ) ) ) ) )
00664                      ( ( NAME> "punc"       ) ( PATTERN> "\";\""                                         ) ( HARD-PREC> 0 ) ( IS-SHOWN> FALSE ) ( IS-TRACED> FALSE ) ( PROGRAM-ACTIONS> ( ( ( TEXT> "return $1;" ) ) ) ) )
00665                      ( ( NAME> "punc"       ) ( PATTERN> "\"'\""                                         ) ( HARD-PREC> 0 ) ( IS-SHOWN> FALSE ) ( IS-TRACED> FALSE ) ( PROGRAM-ACTIONS> ( ( ( TEXT> "return $1;" ) ) ) ) )
00666                      ( ( NAME> "punc"       ) ( PATTERN> "\".\""                                         ) ( HARD-PREC> 0 ) ( IS-SHOWN> FALSE ) ( IS-TRACED> FALSE ) ( PROGRAM-ACTIONS> ( ( ( TEXT> "return $1;" ) ) ) ) )
00667                      ( ( NAME> "punc"       ) ( PATTERN> "\"?\""                                         ) ( HARD-PREC> 0 ) ( IS-SHOWN> FALSE ) ( IS-TRACED> FALSE ) ( PROGRAM-ACTIONS> ( ( ( TEXT> "return $1;" ) ) ) ) )
00668                      ( ( NAME> "punc"       ) ( PATTERN> "\"/\""                                         ) ( HARD-PREC> 0 ) ( IS-SHOWN> FALSE ) ( IS-TRACED> FALSE ) ( PROGRAM-ACTIONS> ( ( ( TEXT> "return $1;" ) ) ) ) )
00669                      ( ( NAME> "textPunc"   ) ( PATTERN> "\"(\""                                         ) ( HARD-PREC> 0 ) ( IS-SHOWN> FALSE ) ( IS-TRACED> FALSE ) ( PROGRAM-ACTIONS> ( ( ( TEXT> "return $1;" ) ) ) ) )
00670                      ( ( NAME> "textPunc"   ) ( PATTERN> "\")\""                                         ) ( HARD-PREC> 0 ) ( IS-SHOWN> FALSE ) ( IS-TRACED> FALSE ) ( PROGRAM-ACTIONS> ( ( ( TEXT> "return $1;" ) ) ) ) )
00671                      ( ( NAME> "textPunc"   ) ( PATTERN> "\"|\""                                         ) ( HARD-PREC> 0 ) ( IS-SHOWN> FALSE ) ( IS-TRACED> FALSE ) ( PROGRAM-ACTIONS> ( ( ( TEXT> "return $1;" ) ) ) ) )
00672                      ( ( NAME> "textPunc"   ) ( PATTERN> "\":\""                                         ) ( HARD-PREC> 0 ) ( IS-SHOWN> FALSE ) ( IS-TRACED> FALSE ) ( PROGRAM-ACTIONS> ( ( ( TEXT> "return $1;" ) ) ) ) )
00673                      ( ( NAME> "textPunc"   ) ( PATTERN> "\",\""                                         ) ( HARD-PREC> 0 ) ( IS-SHOWN> FALSE ) ( IS-TRACED> FALSE ) ( PROGRAM-ACTIONS> ( ( ( TEXT> "return $1;" ) ) ) ) )
00674                      ( ( NAME> "textPunc"   ) ( PATTERN> "\"\\\"\""                                      ) ( HARD-PREC> 0 ) ( IS-SHOWN> FALSE ) ( IS-TRACED> FALSE ) ( PROGRAM-ACTIONS> ( ( ( TEXT> "return $1;" ) ) ) ) )
00675                      ( ( NAME> "textPunc"   ) ( PATTERN> "\"<\""                                         ) ( HARD-PREC> 0 ) ( IS-SHOWN> FALSE ) ( IS-TRACED> FALSE ) ( PROGRAM-ACTIONS> ( ( ( TEXT> "return $1;" ) ) ) ) )
00676                      ( ( NAME> "textPunc"   ) ( PATTERN> "\">\""                                         ) ( HARD-PREC> 0 ) ( IS-SHOWN> FALSE ) ( IS-TRACED> FALSE ) ( PROGRAM-ACTIONS> ( ( ( TEXT> "return $1;" ) ) ) ) )
00677                      ( ( NAME> "nomPunc"    ) ( PATTERN> "\"(\""                                         ) ( HARD-PREC> 0 ) ( IS-SHOWN> FALSE ) ( IS-TRACED> FALSE ) ( PROGRAM-ACTIONS> ( ( ( TEXT> "return \"_\";" ) ) ) ) )
00678                      ( ( NAME> "nomPunc"    ) ( PATTERN> "\")\""                                         ) ( HARD-PREC> 0 ) ( IS-SHOWN> FALSE ) ( IS-TRACED> FALSE ) ( PROGRAM-ACTIONS> ( ( ( TEXT> "return \"_\";" ) ) ) ) )
00679                      ( ( NAME> "nomPunc"    ) ( PATTERN> "\"_\""                                         ) ( HARD-PREC> 0 ) ( IS-SHOWN> FALSE ) ( IS-TRACED> FALSE ) ( PROGRAM-ACTIONS> ( ( ( TEXT> "return \"_\";" ) ) ) ) )
00680                      ( ( NAME> "nomPunc"    ) ( PATTERN> "\"|\""                                         ) ( HARD-PREC> 0 ) ( IS-SHOWN> FALSE ) ( IS-TRACED> FALSE ) ( PROGRAM-ACTIONS> ( ( ( TEXT> "return $1;" ) ) ) ) )
00681                      ( ( NAME> "nomPunc"    ) ( PATTERN> "\":\""                                         ) ( HARD-PREC> 0 ) ( IS-SHOWN> FALSE ) ( IS-TRACED> FALSE ) ( PROGRAM-ACTIONS> ( ( ( TEXT> "return $1;" ) ) ) ) )
00682                      ( ( NAME> "nomPunc"    ) ( PATTERN> "\"\\\"\""                                      ) ( HARD-PREC> 0 ) ( IS-SHOWN> FALSE ) ( IS-TRACED> FALSE ) ( PROGRAM-ACTIONS> ( ( ( TEXT> "return $1;" ) ) ) ) )
00683                      ( ( NAME> "nomPunc"    ) ( PATTERN> "\"<\""                                         ) ( HARD-PREC> 0 ) ( IS-SHOWN> FALSE ) ( IS-TRACED> FALSE ) ( PROGRAM-ACTIONS> ( ( ( TEXT> "return $1;" ) ) ) ) )
00684                      ( ( NAME> "nomPunc"    ) ( PATTERN> "\">\""                                         ) ( HARD-PREC> 0 ) ( IS-SHOWN> FALSE ) ( IS-TRACED> FALSE ) ( PROGRAM-ACTIONS> ( ( ( TEXT> "return $1;" ) ) ) ) )
00685                      ( ( NAME> "argPunc"    ) ( PATTERN> "\"(\""                                         ) ( HARD-PREC> 0 ) ( IS-SHOWN> FALSE ) ( IS-TRACED> FALSE ) ( PROGRAM-ACTIONS> ( ( ( TEXT> "return \"_\";" ) ) ) ) )
00686                      ( ( NAME> "argPunc"    ) ( PATTERN> "\")\""                                         ) ( HARD-PREC> 0 ) ( IS-SHOWN> FALSE ) ( IS-TRACED> FALSE ) ( PROGRAM-ACTIONS> ( ( ( TEXT> "return \"_\";" ) ) ) ) )
00687                      ( ( NAME> "argPunc"    ) ( PATTERN> "\"\\\"\""                                      ) ( HARD-PREC> 0 ) ( IS-SHOWN> FALSE ) ( IS-TRACED> FALSE ) ( PROGRAM-ACTIONS> ( ( ( TEXT> "return \"_\";" ) ) ) ) )
00688                      ( ( NAME> "argPunc"    ) ( PATTERN> "\":\""                                         ) ( HARD-PREC> 0 ) ( IS-SHOWN> FALSE ) ( IS-TRACED> FALSE ) ( PROGRAM-ACTIONS> ( ( ( TEXT> "return \"_\";" ) ) ) ) )
00689                      ( ( NAME> "argPunc"    ) ( PATTERN> "\"|\""                                         ) ( HARD-PREC> 0 ) ( IS-SHOWN> FALSE ) ( IS-TRACED> FALSE ) ( PROGRAM-ACTIONS> ( ( ( TEXT> "return \"_\";" ) ) ) ) )
00690                      ( ( NAME> "argPunc"    ) ( PATTERN> "\"<\""                                         ) ( HARD-PREC> 0 ) ( IS-SHOWN> FALSE ) ( IS-TRACED> FALSE ) ( PROGRAM-ACTIONS> ( ( ( TEXT> "return \"_\";" ) ) ) ) )
00691                      ( ( NAME> "argPunc"    ) ( PATTERN> "\">\""                                         ) ( HARD-PREC> 0 ) ( IS-SHOWN> FALSE ) ( IS-TRACED> FALSE ) ( PROGRAM-ACTIONS> ( ( ( TEXT> "return \"_\";" ) ) ) ) )
00692                      ( ( NAME> "ws"         ) ( PATTERN> "ws whitespace"                                 ) ( HARD-PREC> 0 ) ( IS-SHOWN> FALSE ) ( IS-TRACED> FALSE ) ( PROGRAM-ACTIONS> ( ( ( TEXT> "return 0;" ) ) ) ) )
00693                      ( ( NAME> "ws"         ) ( PATTERN> "whitespace"                                    ) ( HARD-PREC> 0 ) ( IS-SHOWN> FALSE ) ( IS-TRACED> FALSE ) ( PROGRAM-ACTIONS> ( ( ( TEXT> "return 0;" ) ) ) ) )
00694                      ( ( NAME> "whitespace" ) ( PATTERN> "\" \""                                         ) ( HARD-PREC> 0 ) ( IS-SHOWN> FALSE ) ( IS-TRACED> FALSE ) ( PROGRAM-ACTIONS> ( ( ( TEXT> "return 0;" ) ) ) ) )
00695                      ( ( NAME> "whitespace" ) ( PATTERN> "\"\\t\""                                       ) ( HARD-PREC> 0 ) ( IS-SHOWN> FALSE ) ( IS-TRACED> FALSE ) ( PROGRAM-ACTIONS> ( ( ( TEXT> "return 0;" ) ) ) ) )
00696                      ( ( NAME> ""           ) ( PATTERN> ""                                              ) ( HARD-PREC> 0 ) ( IS-SHOWN> TRUE  ) ( IS-TRACED> FALSE ) ( PROGRAM-ACTIONS> ( ( ( TEXT> "" ) ) ) ) )
00697                    )
00698                  )
00699                )
00700              )
00701            )
00702          )
00703        )
00704      )
00705    )
00706  )
00707  
