; MacSHAPA Open Database;; This is one of a series of test databases intended to test the partially; constructed parser.  Neither this nor any of its bretheren are a valid; macshapa databases.;( setf macshapa-db  '(     ( HEADER>       (         ( VERSION> 1 )         ( NAME> "parser_test.db" )        ( DEBUG-LEVEL> 2 )         ( MAX-ERRORS> 20 )        ( MAX-WARNINGS> 50 )      )    )     ( USER>       (        ( PREDICATE-DEFINITIONS>           (            ; a pair of valid predicate definitions            ( |pred_1| ( ( VARIABLE-LENGTH> FALSE ) ( FORMAL-ARG-LIST> ( |<arg1>| |<arg2>| ) ) ) )            ( |pred_2| ( ( VARIABLE-LENGTH> TRUE )  ( FORMAL-ARG-LIST> ( |<arg1>| ) ) ) )                                    ; two more valid predicate definitions, but with the order of the attributes switched            ( |pred_3| ( ( FORMAL-ARG-LIST> ( |<arg1>| |<arg2>| ) ) ( VARIABLE-LENGTH> FALSE ) ) )            ( |pred_4| ( ( FORMAL-ARG-LIST> ( |<arg1>| ) ) ( VARIABLE-LENGTH> TRUE ) ) )            ; a predicate definition without a variable length attribute            ( |pred_5| ( ( FORMAL-ARG-LIST> ( |<arg1>| ) ) ) )            ; a predicate definition without an argument list attribute            ( |pred_6| ( ( VARIABLE-LENGTH> TRUE ) ) )                        ; a predicate definition with an empty attribute list            ( |pred_7| ( ) )                        ; a predicate definition without a value            ( |pred_8| )            ; a predicate with an illegal name            ( |not a pred name| ( ( VARIABLE-LENGTH> FALSE ) ( FORMAL-ARG-LIST> ( |<arg1>| |<arg2>| ) ) ) )            ; aother predicate with an illegal name            ( |<really_not_a_pred_name>| ( ( VARIABLE-LENGTH> FALSE ) ( FORMAL-ARG-LIST> ( |<arg1>| |<arg2>| ) ) ) )			; duplicate definition            ( |pred_2| ( ( VARIABLE-LENGTH> TRUE )  ( FORMAL-ARG-LIST> ( |<arg1>| ) ) ) )                        ; dup def - different # of args            ( |pred_1| ( ( VARIABLE-LENGTH> FALSE ) ( FORMAL-ARG-LIST> ( |<arg1>| ) ) ) )                        ; dup def - variable_length TRUE instead of false            ( |pred_1| ( ( VARIABLE-LENGTH> TRUE ) ( FORMAL-ARG-LIST> ( |<arg1>| |<arg2>| ) ) ) )			; dup def - different argument names            ( |pred_1| ( ( VARIABLE-LENGTH> FALSE ) ( FORMAL-ARG-LIST> ( |<val-1>| |<val-2>| ) ) ) )          )        )         ( SPREADSHEET-VARIABLE-DECLARATIONS> 1 )         ( SPREADSHEET-VARIABLE-DEFINITIONS> 1 )      )     )     ( QUERY> 2 )    ( SYSTEM> 3 )  ) )