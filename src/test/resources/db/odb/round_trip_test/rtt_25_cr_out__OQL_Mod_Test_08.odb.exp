; MacSHAPA Open Database( setf macshapa-db '(    ( HEADER>      (        ( NAME> "OQL_Mod_Test_08.odb" )        ( VERSION> 1 )        ( DEBUG-LEVEL> 0 )        ( MAX-ERRORS> 1 )        ( MAX-WARNINGS> 1 )      )    )    ( USER>      (        ( PREDICATE-DEFINITIONS>          (            ( |p3| ( ( VARIABLE-LENGTH> FALSE ) ( FORMAL-ARG-LIST> ( |<arg1>| |<arg2>| |<arg3>| ) ) ) )            ( |p2| ( ( VARIABLE-LENGTH> FALSE ) ( FORMAL-ARG-LIST> ( |<arg1>| |<arg2>| ) ) ) )            ( |p1| ( ( VARIABLE-LENGTH> FALSE ) ( FORMAL-ARG-LIST> ( |<arg1>| ) ) ) )            ( |comment| ( ( VARIABLE-LENGTH> FALSE ) ( FORMAL-ARG-LIST> ( |<text>| ) ) ) )          )        )        ( SPREADSHEET-VARIABLE-DECLARATIONS>          (            ( |float_2|              (                ( TYPE> <<FLOAT>> )                ( VARIABLE-LENGTH> FALSE )                ( FORMAL-ARG-LIST> ( |<ord>| |<onset>| |<offset>| |<val>| ) )                ( COLUMN-WIDTH> 200 )              )            )            ( |matrix_2|              (                ( TYPE> <<MATRIX>> )                ( VARIABLE-LENGTH> FALSE )                ( FORMAL-ARG-LIST> ( |<ord>| |<onset>| |<offset>| |<val>| ) )                ( COLUMN-WIDTH> 200 )              )            )            ( |pred_2|              (                ( TYPE> <<PREDICATE>> )                ( VARIABLE-LENGTH> FALSE )                ( FORMAL-ARG-LIST> ( |<ord>| |<onset>| |<offset>| |<val>| ) )                ( COLUMN-WIDTH> 200 )              )            )            ( |Text_1|              (                ( TYPE> <<TEXT>> )                ( VARIABLE-LENGTH> FALSE )                ( FORMAL-ARG-LIST> ( |<ord>| |<onset>| |<offset>| |<val>| ) )                ( COLUMN-WIDTH> 200 )              )            )            ( |float_1|              (                ( TYPE> <<FLOAT>> )                ( VARIABLE-LENGTH> FALSE )                ( FORMAL-ARG-LIST> ( |<ord>| |<onset>| |<offset>| |<val>| ) )                ( COLUMN-WIDTH> 200 )              )            )            ( |Text_2|              (                ( TYPE> <<TEXT>> )                ( VARIABLE-LENGTH> FALSE )                ( FORMAL-ARG-LIST> ( |<ord>| |<onset>| |<offset>| |<val>| ) )                ( COLUMN-WIDTH> 200 )              )            )            ( |pred_1|              (                ( TYPE> <<PREDICATE>> )                ( VARIABLE-LENGTH> FALSE )                ( FORMAL-ARG-LIST> ( |<ord>| |<onset>| |<offset>| |<val>| ) )                ( COLUMN-WIDTH> 200 )              )            )            ( |pred_4|              (                ( TYPE> <<PREDICATE>> )                ( VARIABLE-LENGTH> FALSE )                ( FORMAL-ARG-LIST> ( |<ord>| |<onset>| |<offset>| |<val>| ) )                ( COLUMN-WIDTH> 200 )              )            )            ( |Integer_1|              (                ( TYPE> <<INTEGER>> )                ( VARIABLE-LENGTH> FALSE )                ( FORMAL-ARG-LIST> ( |<ord>| |<onset>| |<offset>| |<val>| ) )                ( COLUMN-WIDTH> 200 )              )            )            ( |matrix_1|              (                ( TYPE> <<MATRIX>> )                ( VARIABLE-LENGTH> FALSE )                ( FORMAL-ARG-LIST> ( |<ord>| |<onset>| |<offset>| |<val>| ) )                ( COLUMN-WIDTH> 200 )              )            )            ( |Nominal_2|              (                ( TYPE> <<NOMINAL>> )                ( VARIABLE-LENGTH> FALSE )                ( FORMAL-ARG-LIST> ( |<ord>| |<onset>| |<offset>| |<val>| ) )                ( COLUMN-WIDTH> 200 )              )            )            ( |pred_3|              (                ( TYPE> <<PREDICATE>> )                ( VARIABLE-LENGTH> FALSE )                ( FORMAL-ARG-LIST> ( |<ord>| |<onset>| |<offset>| |<val>| ) )                ( COLUMN-WIDTH> 200 )              )            )            ( |Nominal_1|              (                ( TYPE> <<NOMINAL>> )                ( VARIABLE-LENGTH> FALSE )                ( FORMAL-ARG-LIST> ( |<ord>| |<onset>| |<offset>| |<val>| ) )                ( COLUMN-WIDTH> 200 )              )            )          )        )        ( SPREADSHEET-VARIABLE-DEFINITIONS>          (            ( |float_2|              (                ( CELLS>                  (                    (                      ( ONSET> 1 )                      ( OFFSET> 0 )                      ( |<val>| 1.000000 )                    )                    (                      ( ONSET> 2 )                      ( OFFSET> 0 )                      ( |<val>| 2.000000 )                    )                    (                      ( ONSET> 3 )                      ( OFFSET> 0 )                      ( |<val>| 3.000000 )                    )                  )                )              )            )            ( |matrix_2|              (                ( CELLS>                  (                    (                      ( ONSET> 0 )                      ( OFFSET> 0 )                      ( |<val>| "" )                    )                    (                      ( ONSET> 1 )                      ( OFFSET> 0 )                      ( |<val>| "alpha" )                    )                    (                      ( ONSET> 2 )                      ( OFFSET> 0 )                      ( |<val>| "bravo" )                    )                    (                      ( ONSET> 3 )                      ( OFFSET> 0 )                      ( |<val>| "charlie" )                    )                  )                )                ( VOCAB> ( ) )              )            )            ( |pred_2|              (                ( CELLS>                  (                    (                      ( ONSET> 1 )                      ( OFFSET> 0 )                      ( |<val>| ( |p1| |alpha| ) )                    )                    (                      ( ONSET> 2 )                      ( OFFSET> 0 )                      ( |<val>| ( |p2| |alpha| ( |p1| |alpha| ) ) )                    )                    (                      ( ONSET> 3 )                      ( OFFSET> 0 )                      ( |<val>| ( |p3| |alpha| ( |p2| |bravo| |charlie| ) |delta| ) )                    )                    (                      ( ONSET> 3 )                      ( OFFSET> 0 )                      ( |<val>| () )                    )                  )                )                ( VOCAB> ( |p1| |p2| |p3| ) )              )            )            ( |Text_1|              (                ( CELLS>                  (                    (                      ( ONSET> 0 )                      ( OFFSET> 0 )                      ( |<val>| "" )                    )                    (                      ( ONSET> 1 )                      ( OFFSET> 0 )                      ( |<val>| "alpha" )                    )                    (                      ( ONSET> 2 )                      ( OFFSET> 0 )                      ( |<val>| "bravo" )                    )                    (                      ( ONSET> 3 )                      ( OFFSET> 0 )                      ( |<val>| "charlie" )                    )                  )                )              )            )            ( |float_1|              (                ( CELLS>                  (                    (                      ( ONSET> 1 )                      ( OFFSET> 0 )                      ( |<val>| 1.000000 )                    )                    (                      ( ONSET> 2 )                      ( OFFSET> 0 )                      ( |<val>| 2.000000 )                    )                    (                      ( ONSET> 3 )                      ( OFFSET> 0 )                      ( |<val>| 3.000000 )                    )                  )                )              )            )            ( |Text_2|              (                ( CELLS>                  (                    (                      ( ONSET> 0 )                      ( OFFSET> 0 )                      ( |<val>| "" )                    )                    (                      ( ONSET> 1 )                      ( OFFSET> 0 )                      ( |<val>| "alpha" )                    )                    (                      ( ONSET> 2 )                      ( OFFSET> 0 )                      ( |<val>| "bravo" )                    )                    (                      ( ONSET> 3 )                      ( OFFSET> 0 )                      ( |<val>| "charlie" )                    )                  )                )              )            )            ( |pred_1|              (                ( CELLS>                  (                    (                      ( ONSET> 1 )                      ( OFFSET> 0 )                      ( |<val>| ( |p1| |alpha| ) )                    )                    (                      ( ONSET> 2 )                      ( OFFSET> 0 )                      ( |<val>| ( |p2| |alpha| ( |p1| |alpha| ) ) )                    )                    (                      ( ONSET> 3 )                      ( OFFSET> 0 )                      ( |<val>| ( |p3| |alpha| ( |p2| |bravo| |charlie| ) |delta| ) )                    )                    (                      ( ONSET> 3 )                      ( OFFSET> 0 )                      ( |<val>| () )                    )                  )                )                ( VOCAB> ( |p1| |p2| |p3| ) )              )            )            ( |pred_4|              (                ( CELLS>                  (                    (                      ( ONSET> 0 )                      ( OFFSET> 0 )                      ( |<val>| ( |p3| 1 ( TIME> 1 ) 1.000000 ) )                    )                    (                      ( ONSET> 0 )                      ( OFFSET> 0 )                      ( |<val>| ( |p3| |one| "one" |<arg3>| ) )                    )                    (                      ( ONSET> 0 )                      ( OFFSET> 0 )                      ( |<val>| ( |p1| |<arg1>| ) )                    )                    (                      ( ONSET> 0 )                      ( OFFSET> 0 )                      ( |<val>| ( |p1| "alpha" ) )                    )                    (                      ( ONSET> 0 )                      ( OFFSET> 0 )                      ( |<val>| () )                    )                  )                )                ( VOCAB> ( |p1| |p3| ) )              )            )            ( |Integer_1|              (                ( CELLS>                  (                    (                      ( ONSET> 1 )                      ( OFFSET> 0 )                      ( |<val>| 1 )                    )                    (                      ( ONSET> 2 )                      ( OFFSET> 0 )                      ( |<val>| 2 )                    )                    (                      ( ONSET> 3 )                      ( OFFSET> 0 )                      ( |<val>| 3 )                    )                  )                )              )            )            ( |matrix_1|              (                ( CELLS>                  (                    (                      ( ONSET> 0 )                      ( OFFSET> 0 )                      ( |<val>| "" )                    )                    (                      ( ONSET> 1 )                      ( OFFSET> 0 )                      ( |<val>| "alpha" )                    )                    (                      ( ONSET> 2 )                      ( OFFSET> 0 )                      ( |<val>| "bravo" )                    )                    (                      ( ONSET> 3 )                      ( OFFSET> 0 )                      ( |<val>| "charlie" )                    )                  )                )                ( VOCAB> ( ) )              )            )            ( |Nominal_2|              (                ( CELLS>                  (                    (                      ( ONSET> 0 )                      ( OFFSET> 0 )                      ( |<val>| |alpha| )                    )                    (                      ( ONSET> 1 )                      ( OFFSET> 0 )                      ( |<val>| |bravo| )                    )                    (                      ( ONSET> 2 )                      ( OFFSET> 0 )                      ( |<val>| |charlie| )                    )                    (                      ( ONSET> 3 )                      ( OFFSET> 0 )                      ( |<val>| |<val>| )                    )                  )                )              )            )            ( |pred_3|              (                ( CELLS>                  (                    (                      ( ONSET> 0 )                      ( OFFSET> 0 )                      ( |<val>| ( |p3| 1 ( TIME> 1 ) 1.000000 ) )                    )                    (                      ( ONSET> 0 )                      ( OFFSET> 0 )                      ( |<val>| ( |p3| |one| "one" |<arg3>| ) )                    )                    (                      ( ONSET> 0 )                      ( OFFSET> 0 )                      ( |<val>| ( |p1| |<arg1>| ) )                    )                    (                      ( ONSET> 0 )                      ( OFFSET> 0 )                      ( |<val>| ( |p1| "alpha" ) )                    )                    (                      ( ONSET> 0 )                      ( OFFSET> 0 )                      ( |<val>| () )                    )                  )                )                ( VOCAB> ( |p1| |p3| ) )              )            )            ( |Nominal_1|              (                ( CELLS>                  (                    (                      ( ONSET> 0 )                      ( OFFSET> 0 )                      ( |<val>| |alpha| )                    )                    (                      ( ONSET> 1 )                      ( OFFSET> 0 )                      ( |<val>| |bravo| )                    )                    (                      ( ONSET> 2 )                      ( OFFSET> 0 )                      ( |<val>| |charlie| )                    )                    (                      ( ONSET> 3 )                      ( OFFSET> 0 )                      ( |<val>| |<val>| )                    )                  )                )              )            )          )        )      )    )    ( QUERY>      (        ( |comment| "Test file for the extention of the boolean comparison predicates (i.e. eq(), ne(), le(), lt(), ge(), & gt()) to all MacSHAPA data types." )         ()         ( |comment| "Start with basic regression test to verify that we can still do everything that we used to be able to do before the extentions:" )         ()         ( |comment| "First, test comparisons of integers and floats" )         ( |query| ( |and| ( |Integer_1| |<ord>| |<onset>| |<offset>| |?val1| ) ( |float_1| |<ord>| |<onset>| |<offset>| |?val2| ) ( |eq| |?val1| |?val2| ) ) ( |print| "eq(" |?val1| |?val2| ") is TRUE" ) )         ( |query| ( |and| ( |Integer_1| |<ord>| |<onset>| |<offset>| |?val1| ) ( |float_1| |<ord>| |<onset>| |<offset>| |?val2| ) ( |ne| |?val1| |?val2| ) ) ( |print| "ne(" |?val1| |?val2| ") is TRUE" ) )         ( |query| ( |and| ( |Integer_1| |<ord>| |<onset>| |<offset>| |?val1| ) ( |float_1| |<ord>| |<onset>| |<offset>| |?val2| ) ( |ge| |?val1| |?val2| ) ) ( |print| "ge(" |?val1| |?val2| ") is TRUE" ) )         ( |query| ( |and| ( |Integer_1| |<ord>| |<onset>| |<offset>| |?val1| ) ( |float_1| |<ord>| |<onset>| |<offset>| |?val2| ) ( |gt| |?val1| |?val2| ) ) ( |print| "gt(" |?val1| |?val2| ") is TRUE" ) )         ( |query| ( |and| ( |Integer_1| |<ord>| |<onset>| |<offset>| |?val1| ) ( |float_1| |<ord>| |<onset>| |<offset>| |?val2| ) ( |le| |?val1| |?val2| ) ) ( |print| "le(" |?val1| |?val2| ") is TRUE" ) )         ( |query| ( |and| ( |Integer_1| |<ord>| |<onset>| |<offset>| |?val1| ) ( |float_1| |<ord>| |<onset>| |<offset>| |?val2| ) ( |lt| |?val1| |?val2| ) ) ( |print| "lt(" |?val1| |?val2| ") is TRUE" ) )         ()         ( |comment| "Second, test comparisons of integers and times" )         ( |query| ( |and| ( |Integer_1| |<ord>| |<onset>| |<offset>| |?val1| ) ( |float_1| |<ord>| |?val2| |<offset>| |<val>| ) ( |eq| |?val1| |?val2| ) ) ( |print| "eq(" |?val1| |?val2| ") is TRUE" ) )         ( |query| ( |and| ( |Integer_1| |<ord>| |<onset>| |<offset>| |?val1| ) ( |float_1| |<ord>| |?val2| |<offset>| |<val>| ) ( |ne| |?val1| |?val2| ) ) ( |print| "ne(" |?val1| |?val2| ") is TRUE" ) )         ( |query| ( |and| ( |Integer_1| |<ord>| |<onset>| |<offset>| |?val1| ) ( |float_1| |<ord>| |?val2| |<offset>| |<val>| ) ( |ge| |?val1| |?val2| ) ) ( |print| "ge(" |?val1| |?val2| ") is TRUE" ) )         ( |query| ( |and| ( |Integer_1| |<ord>| |<onset>| |<offset>| |?val1| ) ( |float_1| |<ord>| |?val2| |<offset>| |<val>| ) ( |gt| |?val1| |?val2| ) ) ( |print| "gt(" |?val1| |?val2| ") is TRUE" ) )         ( |query| ( |and| ( |Integer_1| |<ord>| |<onset>| |<offset>| |?val1| ) ( |float_1| |<ord>| |?val2| |<offset>| |<val>| ) ( |le| |?val1| |?val2| ) ) ( |print| "le(" |?val1| |?val2| ") is TRUE" ) )         ( |query| ( |and| ( |Integer_1| |<ord>| |<onset>| |<offset>| |?val1| ) ( |float_1| |<ord>| |?val2| |<offset>| |<val>| ) ( |lt| |?val1| |?val2| ) ) ( |print| "lt(" |?val1| |?val2| ") is TRUE" ) )         ()         ( |comment| "Third, test comparisons of floats and times" )         ( |query| ( |and| ( |Integer_1| |<ord>| |?val1| |<offset>| |<val>| ) ( |float_1| |<ord>| |<onset>| |<offset>| |?val2| ) ( |eq| |?val1| |?val2| ) ) ( |print| "eq(" |?val1| |?val2| ") is TRUE" ) )         ( |query| ( |and| ( |Integer_1| |<ord>| |?val1| |<offset>| |<val>| ) ( |float_1| |<ord>| |<onset>| |<offset>| |?val2| ) ( |ne| |?val1| |?val2| ) ) ( |print| "ne(" |?val1| |?val2| ") is TRUE" ) )         ( |query| ( |and| ( |Integer_1| |<ord>| |?val1| |<offset>| |<val>| ) ( |float_1| |<ord>| |<onset>| |<offset>| |?val2| ) ( |ge| |?val1| |?val2| ) ) ( |print| "ge(" |?val1| |?val2| ") is TRUE" ) )         ( |query| ( |and| ( |Integer_1| |<ord>| |?val1| |<offset>| |<val>| ) ( |float_1| |<ord>| |<onset>| |<offset>| |?val2| ) ( |gt| |?val1| |?val2| ) ) ( |print| "gt(" |?val1| |?val2| ") is TRUE" ) )         ( |query| ( |and| ( |Integer_1| |<ord>| |?val1| |<offset>| |<val>| ) ( |float_1| |<ord>| |<onset>| |<offset>| |?val2| ) ( |le| |?val1| |?val2| ) ) ( |print| "le(" |?val1| |?val2| ") is TRUE" ) )         ( |query| ( |and| ( |Integer_1| |<ord>| |?val1| |<offset>| |<val>| ) ( |float_1| |<ord>| |<onset>| |<offset>| |?val2| ) ( |lt| |?val1| |?val2| ) ) ( |print| "lt(" |?val1| |?val2| ") is TRUE" ) )         ()         ( |comment| "Fourth, test integer/integer comparisons" )         ( |query| ( |and| ( |Integer_1| |<ord>| |<onset>| |<offset>| |?val1| ) ( |float_1| |?val2| |<onset>| |<offset>| |<val>| ) ( |eq| |?val1| |?val2| ) ) ( |print| "eq(" |?val1| |?val2| ") is TRUE" ) )         ( |query| ( |and| ( |Integer_1| |<ord>| |<onset>| |<offset>| |?val1| ) ( |float_1| |?val2| |<onset>| |<offset>| |<val>| ) ( |ne| |?val1| |?val2| ) ) ( |print| "ne(" |?val1| |?val2| ") is TRUE" ) )         ( |query| ( |and| ( |Integer_1| |<ord>| |<onset>| |<offset>| |?val1| ) ( |float_1| |?val2| |<onset>| |<offset>| |<val>| ) ( |ge| |?val1| |?val2| ) ) ( |print| "ge(" |?val1| |?val2| ") is TRUE" ) )         ( |query| ( |and| ( |Integer_1| |<ord>| |<onset>| |<offset>| |?val1| ) ( |float_1| |?val2| |<onset>| |<offset>| |<val>| ) ( |gt| |?val1| |?val2| ) ) ( |print| "gt(" |?val1| |?val2| ") is TRUE" ) )         ( |query| ( |and| ( |Integer_1| |<ord>| |<onset>| |<offset>| |?val1| ) ( |float_1| |?val2| |<onset>| |<offset>| |<val>| ) ( |le| |?val1| |?val2| ) ) ( |print| "le(" |?val1| |?val2| ") is TRUE" ) )         ( |query| ( |and| ( |Integer_1| |<ord>| |<onset>| |<offset>| |?val1| ) ( |float_1| |?val2| |<onset>| |<offset>| |<val>| ) ( |lt| |?val1| |?val2| ) ) ( |print| "lt(" |?val1| |?val2| ") is TRUE" ) )         ()         ( |comment| "Fifth, test time/time comparisons" )         ( |query| ( |and| ( |Integer_1| |<ord>| |?val1| |<offset>| |<val>| ) ( |float_1| |<ord>| |?val2| |<offset>| |<val>| ) ( |eq| |?val1| |?val2| ) ) ( |print| "eq(" |?val1| |?val2| ") is TRUE" ) )         ( |query| ( |and| ( |Integer_1| |<ord>| |?val1| |<offset>| |<val>| ) ( |float_1| |<ord>| |?val2| |<offset>| |<val>| ) ( |ne| |?val1| |?val2| ) ) ( |print| "ne(" |?val1| |?val2| ") is TRUE" ) )         ( |query| ( |and| ( |Integer_1| |<ord>| |?val1| |<offset>| |<val>| ) ( |float_1| |<ord>| |?val2| |<offset>| |<val>| ) ( |ge| |?val1| |?val2| ) ) ( |print| "ge(" |?val1| |?val2| ") is TRUE" ) )         ( |query| ( |and| ( |Integer_1| |<ord>| |?val1| |<offset>| |<val>| ) ( |float_1| |<ord>| |?val2| |<offset>| |<val>| ) ( |gt| |?val1| |?val2| ) ) ( |print| "gt(" |?val1| |?val2| ") is TRUE" ) )         ( |query| ( |and| ( |Integer_1| |<ord>| |?val1| |<offset>| |<val>| ) ( |float_1| |<ord>| |?val2| |<offset>| |<val>| ) ( |le| |?val1| |?val2| ) ) ( |print| "le(" |?val1| |?val2| ") is TRUE" ) )         ( |query| ( |and| ( |Integer_1| |<ord>| |?val1| |<offset>| |<val>| ) ( |float_1| |<ord>| |?val2| |<offset>| |<val>| ) ( |lt| |?val1| |?val2| ) ) ( |print| "lt(" |?val1| |?val2| ") is TRUE" ) )         ()         ( |comment| "Sixth, test float/float comparisons" )         ( |query| ( |and| ( |float_1| |<ord>| |<onset>| |<offset>| |?val1| ) ( |float_2| |<ord>| |<onset>| |<offset>| |?val2| ) ( |eq| |?val1| |?val2| ) ) ( |print| "eq(" |?val1| |?val2| ") is TRUE" ) )         ( |query| ( |and| ( |float_1| |<ord>| |<onset>| |<offset>| |?val1| ) ( |float_2| |<ord>| |<onset>| |<offset>| |?val2| ) ( |ne| |?val1| |?val2| ) ) ( |print| "ne(" |?val1| |?val2| ") is TRUE" ) )         ( |query| ( |and| ( |float_1| |<ord>| |<onset>| |<offset>| |?val1| ) ( |float_2| |<ord>| |<onset>| |<offset>| |?val2| ) ( |ge| |?val1| |?val2| ) ) ( |print| "ge(" |?val1| |?val2| ") is TRUE" ) )         ( |query| ( |and| ( |float_1| |<ord>| |<onset>| |<offset>| |?val1| ) ( |float_2| |<ord>| |<onset>| |<offset>| |?val2| ) ( |gt| |?val1| |?val2| ) ) ( |print| "gt(" |?val1| |?val2| ") is TRUE" ) )         ( |query| ( |and| ( |float_1| |<ord>| |<onset>| |<offset>| |?val1| ) ( |float_2| |<ord>| |<onset>| |<offset>| |?val2| ) ( |le| |?val1| |?val2| ) ) ( |print| "le(" |?val1| |?val2| ") is TRUE" ) )         ( |query| ( |and| ( |float_1| |<ord>| |<onset>| |<offset>| |?val1| ) ( |float_2| |<ord>| |<onset>| |<offset>| |?val2| ) ( |lt| |?val1| |?val2| ) ) ( |print| "lt(" |?val1| |?val2| ") is TRUE" ) )         ()         ( |comment| "Seventh, test comparisons between values generated by data predicates.  Because of our earlier tests, it is sufficient to verify that the arguments are delivered correctly.  Thus we will only use the eq() predicate in this test." )         ( |query| ( |and| ( |Integer_1| |<ord>| |<onset>| |<offset>| |?val1| ) ( |float_1| |<ord>| |?val2| |<offset>| |<val>| ) ( |eq| ( |times| |?val1| 10 ) ( |times| |?val2| 10 ) ) ) ( |print| "eq(" ( |times| |?val1| 10 ) ( |times| |?val2| 10 ) ") is TRUE" ) )         ( |query| ( |and| ( |Integer_1| |<ord>| |<onset>| |<offset>| |?val1| ) ( |float_1| |<ord>| |<onset>| |<offset>| |?val2| ) ( |eq| ( |plus| |?val1| 25 ) ( |plus| |?val2| 25 ) ) ) ( |print| "eq(" ( |plus| |?val1| 25 ) ( |plus| |?val2| 25 ) ") is TRUE" ) )         ()         ()         ( |comment| "The above covers all the types of comparisons we were able to handle before the enhancements.  Now on to comparisons between strings, quote strings, and nominals." )         ()         ( |comment| "First, test text/nominal comparisons" )         ( |query| ( |and| ( |Text_1| |<ord>| |<onset>| |<offset>| |?val1| ) ( |Nominal_1| |<ord>| |<onset>| |<offset>| |?val2| ) ( |eq| |?val1| |?val2| ) ) ( |print| "eq(" |?val1| |?val2| ") is TRUE" ) )         ( |query| ( |and| ( |Text_1| |<ord>| |<onset>| |<offset>| |?val1| ) ( |Nominal_1| |<ord>| |<onset>| |<offset>| |?val2| ) ( |ne| |?val1| |?val2| ) ) ( |print| "ne(" |?val1| |?val2| ") is TRUE" ) )         ( |query| ( |and| ( |Text_1| |<ord>| |<onset>| |<offset>| |?val1| ) ( |Nominal_1| |<ord>| |<onset>| |<offset>| |?val2| ) ( |ge| |?val1| |?val2| ) ) ( |print| "ge(" |?val1| |?val2| ") is TRUE" ) )         ( |query| ( |and| ( |Text_1| |<ord>| |<onset>| |<offset>| |?val1| ) ( |Nominal_1| |<ord>| |<onset>| |<offset>| |?val2| ) ( |gt| |?val1| |?val2| ) ) ( |print| "gt(" |?val1| |?val2| ") is TRUE" ) )         ( |query| ( |and| ( |Text_1| |<ord>| |<onset>| |<offset>| |?val1| ) ( |Nominal_1| |<ord>| |<onset>| |<offset>| |?val2| ) ( |le| |?val1| |?val2| ) ) ( |print| "le(" |?val1| |?val2| ") is TRUE" ) )         ( |query| ( |and| ( |Text_1| |<ord>| |<onset>| |<offset>| |?val1| ) ( |Nominal_1| |<ord>| |<onset>| |<offset>| |?val2| ) ( |lt| |?val1| |?val2| ) ) ( |print| "lt(" |?val1| |?val2| ") is TRUE" ) )         ()         ( |comment| "Second, test text/quote string comparisons" )         ( |query| ( |and| ( |Text_1| |<ord>| |<onset>| |<offset>| |?val1| ) ( |matrix_1| |<ord>| |<onset>| |<offset>| |?val2| ) ( |eq| |?val1| |?val2| ) ) ( |print| "eq(" |?val1| |?val2| ") is TRUE" ) )         ( |query| ( |and| ( |Text_1| |<ord>| |<onset>| |<offset>| |?val1| ) ( |matrix_1| |<ord>| |<onset>| |<offset>| |?val2| ) ( |ne| |?val1| |?val2| ) ) ( |print| "ne(" |?val1| |?val2| ") is TRUE" ) )         ( |query| ( |and| ( |Text_1| |<ord>| |<onset>| |<offset>| |?val1| ) ( |matrix_1| |<ord>| |<onset>| |<offset>| |?val2| ) ( |ge| |?val1| |?val2| ) ) ( |print| "ge(" |?val1| |?val2| ") is TRUE" ) )         ( |query| ( |and| ( |Text_1| |<ord>| |<onset>| |<offset>| |?val1| ) ( |matrix_1| |<ord>| |<onset>| |<offset>| |?val2| ) ( |gt| |?val1| |?val2| ) ) ( |print| "gt(" |?val1| |?val2| ") is TRUE" ) )         ( |query| ( |and| ( |Text_1| |<ord>| |<onset>| |<offset>| |?val1| ) ( |matrix_1| |<ord>| |<onset>| |<offset>| |?val2| ) ( |le| |?val1| |?val2| ) ) ( |print| "le(" |?val1| |?val2| ") is TRUE" ) )         ( |query| ( |and| ( |Text_1| |<ord>| |<onset>| |<offset>| |?val1| ) ( |matrix_1| |<ord>| |<onset>| |<offset>| |?val2| ) ( |lt| |?val1| |?val2| ) ) ( |print| "lt(" |?val1| |?val2| ") is TRUE" ) )         ()         ( |comment| "Third, test nominal/quote string comparisons" )         ( |query| ( |and| ( |Nominal_1| |<ord>| |<onset>| |<offset>| |?val1| ) ( |matrix_1| |<ord>| |<onset>| |<offset>| |?val2| ) ( |eq| |?val1| |?val2| ) ) ( |print| "eq(" |?val1| |?val2| ") is TRUE" ) )         ( |query| ( |and| ( |Nominal_1| |<ord>| |<onset>| |<offset>| |?val1| ) ( |matrix_1| |<ord>| |<onset>| |<offset>| |?val2| ) ( |ne| |?val1| |?val2| ) ) ( |print| "ne(" |?val1| |?val2| ") is TRUE" ) )         ( |query| ( |and| ( |Nominal_1| |<ord>| |<onset>| |<offset>| |?val1| ) ( |matrix_1| |<ord>| |<onset>| |<offset>| |?val2| ) ( |ge| |?val1| |?val2| ) ) ( |print| "ge(" |?val1| |?val2| ") is TRUE" ) )         ( |query| ( |and| ( |Nominal_1| |<ord>| |<onset>| |<offset>| |?val1| ) ( |matrix_1| |<ord>| |<onset>| |<offset>| |?val2| ) ( |gt| |?val1| |?val2| ) ) ( |print| "gt(" |?val1| |?val2| ") is TRUE" ) )         ( |query| ( |and| ( |Nominal_1| |<ord>| |<onset>| |<offset>| |?val1| ) ( |matrix_1| |<ord>| |<onset>| |<offset>| |?val2| ) ( |le| |?val1| |?val2| ) ) ( |print| "le(" |?val1| |?val2| ") is TRUE" ) )         ( |query| ( |and| ( |Nominal_1| |<ord>| |<onset>| |<offset>| |?val1| ) ( |matrix_1| |<ord>| |<onset>| |<offset>| |?val2| ) ( |lt| |?val1| |?val2| ) ) ( |print| "lt(" |?val1| |?val2| ") is TRUE" ) )         ()         ( |comment| "Fourth, test text/text string comparisons" )         ( |query| ( |and| ( |Text_1| |<ord>| |<onset>| |<offset>| |?val1| ) ( |Text_2| |<ord>| |<onset>| |<offset>| |?val2| ) ( |eq| |?val1| |?val2| ) ) ( |print| "eq(" |?val1| |?val2| ") is TRUE" ) )         ( |query| ( |and| ( |Text_1| |<ord>| |<onset>| |<offset>| |?val1| ) ( |Text_2| |<ord>| |<onset>| |<offset>| |?val2| ) ( |ne| |?val1| |?val2| ) ) ( |print| "ne(" |?val1| |?val2| ") is TRUE" ) )         ( |query| ( |and| ( |Text_1| |<ord>| |<onset>| |<offset>| |?val1| ) ( |Text_2| |<ord>| |<onset>| |<offset>| |?val2| ) ( |ge| |?val1| |?val2| ) ) ( |print| "ge(" |?val1| |?val2| ") is TRUE" ) )         ( |query| ( |and| ( |Text_1| |<ord>| |<onset>| |<offset>| |?val1| ) ( |Text_2| |<ord>| |<onset>| |<offset>| |?val2| ) ( |gt| |?val1| |?val2| ) ) ( |print| "gt(" |?val1| |?val2| ") is TRUE" ) )         ( |query| ( |and| ( |Text_1| |<ord>| |<onset>| |<offset>| |?val1| ) ( |Text_2| |<ord>| |<onset>| |<offset>| |?val2| ) ( |le| |?val1| |?val2| ) ) ( |print| "le(" |?val1| |?val2| ") is TRUE" ) )         ( |query| ( |and| ( |Text_1| |<ord>| |<onset>| |<offset>| |?val1| ) ( |Text_2| |<ord>| |<onset>| |<offset>| |?val2| ) ( |lt| |?val1| |?val2| ) ) ( |print| "lt(" |?val1| |?val2| ") is TRUE" ) )         ()         ( |comment| "Fifth, test nominal/nominal comparisons" )         ( |query| ( |and| ( |Nominal_1| |<ord>| |<onset>| |<offset>| |?val1| ) ( |Nominal_2| |<ord>| |<onset>| |<offset>| |?val2| ) ( |eq| |?val1| |?val2| ) ) ( |print| "eq(" |?val1| |?val2| ") is TRUE" ) )         ( |query| ( |and| ( |Nominal_1| |<ord>| |<onset>| |<offset>| |?val1| ) ( |Nominal_2| |<ord>| |<onset>| |<offset>| |?val2| ) ( |ne| |?val1| |?val2| ) ) ( |print| "ne(" |?val1| |?val2| ") is TRUE" ) )         ( |query| ( |and| ( |Nominal_1| |<ord>| |<onset>| |<offset>| |?val1| ) ( |Nominal_2| |<ord>| |<onset>| |<offset>| |?val2| ) ( |ge| |?val1| |?val2| ) ) ( |print| "ge(" |?val1| |?val2| ") is TRUE" ) )         ( |query| ( |and| ( |Nominal_1| |<ord>| |<onset>| |<offset>| |?val1| ) ( |Nominal_2| |<ord>| |<onset>| |<offset>| |?val2| ) ( |gt| |?val1| |?val2| ) ) ( |print| "gt(" |?val1| |?val2| ") is TRUE" ) )         ( |query| ( |and| ( |Nominal_1| |<ord>| |<onset>| |<offset>| |?val1| ) ( |Nominal_2| |<ord>| |<onset>| |<offset>| |?val2| ) ( |le| |?val1| |?val2| ) ) ( |print| "le(" |?val1| |?val2| ") is TRUE" ) )         ( |query| ( |and| ( |Nominal_1| |<ord>| |<onset>| |<offset>| |?val1| ) ( |Nominal_2| |<ord>| |<onset>| |<offset>| |?val2| ) ( |lt| |?val1| |?val2| ) ) ( |print| "lt(" |?val1| |?val2| ") is TRUE" ) )         ()         ( |comment| "Sixth, test quote string / quote string comparisons" )         ( |query| ( |and| ( |matrix_1| |<ord>| |<onset>| |<offset>| |?val1| ) ( |matrix_2| |<ord>| |<onset>| |<offset>| |?val2| ) ( |eq| |?val1| |?val2| ) ) ( |print| "eq(" |?val1| |?val2| ") is TRUE" ) )         ( |query| ( |and| ( |matrix_1| |<ord>| |<onset>| |<offset>| |?val1| ) ( |matrix_2| |<ord>| |<onset>| |<offset>| |?val2| ) ( |ne| |?val1| |?val2| ) ) ( |print| "ne(" |?val1| |?val2| ") is TRUE" ) )         ( |query| ( |and| ( |matrix_1| |<ord>| |<onset>| |<offset>| |?val1| ) ( |matrix_2| |<ord>| |<onset>| |<offset>| |?val2| ) ( |ge| |?val1| |?val2| ) ) ( |print| "ge(" |?val1| |?val2| ") is TRUE" ) )         ( |query| ( |and| ( |matrix_1| |<ord>| |<onset>| |<offset>| |?val1| ) ( |matrix_2| |<ord>| |<onset>| |<offset>| |?val2| ) ( |gt| |?val1| |?val2| ) ) ( |print| "gt(" |?val1| |?val2| ") is TRUE" ) )         ( |query| ( |and| ( |matrix_1| |<ord>| |<onset>| |<offset>| |?val1| ) ( |matrix_2| |<ord>| |<onset>| |<offset>| |?val2| ) ( |le| |?val1| |?val2| ) ) ( |print| "le(" |?val1| |?val2| ") is TRUE" ) )         ( |query| ( |and| ( |matrix_1| |<ord>| |<onset>| |<offset>| |?val1| ) ( |matrix_2| |<ord>| |<onset>| |<offset>| |?val2| ) ( |lt| |?val1| |?val2| ) ) ( |print| "lt(" |?val1| |?val2| ") is TRUE" ) )         ()         ()         ( |comment| "Now on to the crux of the biscit:  Comparisons bewteen predicates.  The only comparisons that make sence in this case are eq & ne, and thus they were the only ones implemented.  Hence the last four queries in the following group of six should have no matches." )         ( |query| ( |and| ( |pred_1| |<ord>| |<onset>| |<offset>| |?val1| ) ( |pred_2| |<ord>| |<onset>| |<offset>| |?val2| ) ( |eq| |?val1| |?val2| ) ) ( |print| "eq(" |?val1| |?val2| ") is TRUE" ) )         ( |query| ( |and| ( |pred_1| |<ord>| |<onset>| |<offset>| |?val1| ) ( |pred_2| |<ord>| |<onset>| |<offset>| |?val2| ) ( |ne| |?val1| |?val2| ) ) ( |print| "ne(" |?val1| |?val2| ") is TRUE" ) )         ( |query| ( |and| ( |pred_1| |<ord>| |<onset>| |<offset>| |?val1| ) ( |pred_2| |<ord>| |<onset>| |<offset>| |?val2| ) ( |ge| |?val1| |?val2| ) ) ( |print| "ge(" |?val1| |?val2| ") is TRUE" ) )         ( |query| ( |and| ( |pred_1| |<ord>| |<onset>| |<offset>| |?val1| ) ( |pred_2| |<ord>| |<onset>| |<offset>| |?val2| ) ( |gt| |?val1| |?val2| ) ) ( |print| "gt(" |?val1| |?val2| ") is TRUE" ) )         ( |query| ( |and| ( |pred_1| |<ord>| |<onset>| |<offset>| |?val1| ) ( |pred_2| |<ord>| |<onset>| |<offset>| |?val2| ) ( |le| |?val1| |?val2| ) ) ( |print| "le(" |?val1| |?val2| ") is TRUE" ) )         ( |query| ( |and| ( |pred_1| |<ord>| |<onset>| |<offset>| |?val1| ) ( |pred_2| |<ord>| |<onset>| |<offset>| |?val2| ) ( |lt| |?val1| |?val2| ) ) ( |print| "lt(" |?val1| |?val2| ") is TRUE" ) )         ()         ( |query| ( |and| ( |pred_3| |<ord>| |<onset>| |<offset>| |?val1| ) ( |pred_4| |<ord>| |<onset>| |<offset>| |?val2| ) ( |eq| |?val1| |?val2| ) ) ( |print| "eq(" |?val1| |?val2| ") is TRUE" ) )         ( |query| ( |and| ( |pred_3| |<ord>| |<onset>| |<offset>| |?val1| ) ( |pred_4| |<ord>| |<onset>| |<offset>| |?val2| ) ( |ne| |?val1| |?val2| ) ) ( |print| "ne(" |?val1| |?val2| ") is TRUE" ) )         ()         ( |query| ( |and| ( |Text_1| |<ord>| |<onset>| |<offset>| |?val1| ) ( |pred_3| |<ord>| |<onset>| |<offset>| |?val2| ) ( |eq| ( |p1| |?val1| ) |?val2| ) ) ( |print| "eq(" ( |concat| "p1(" |?val1| ")" ) |?val2| ") is TRUE" ) )         ( |query| ( |and| ( |Text_1| |<ord>| |<onset>| |<offset>| |?val1| ) ( |pred_3| |<ord>| |<onset>| |<offset>| |?val2| ) ( |eq| ( |p1| |?val1| ) |?val2| ) ) ( |print| "eq(" ( |concat| ( |p1| |?val1| ) ) |?val2| ") is TRUE" ) )         ( |query| ( |and| ( |Text_1| |<ord>| |<onset>| |<offset>| |?val1| ) ( |pred_3| |<ord>| |<onset>| |<offset>| |?val2| ) ( |ne| ( |p1| |?val1| ) |?val2| ) ) ( |print| "ne(" ( |concat| "p1(" |?val1| ")" ) |?val2| ") is TRUE" ) )         ( |query| ( |and| ( |Text_1| |<ord>| |<onset>| |<offset>| |?val1| ) ( |pred_3| |<ord>| |<onset>| |<offset>| |?val2| ) ( |ne| ( |p1| |?val1| ) |?val2| ) ) ( |print| "ne(" ( |concat| ( |p1| |?val1| ) ) |?val2| ") is TRUE" ) )         ()         ( |comment| "Now, lets try to break things:" )         ( |query| ( |and| ( |Integer_1| |<ord>| |<onset>| |<offset>| |?val| ) ( |or| ( |eq| |?val| |<y>| ) ( |ne| |?val| |<y>| ) ( |le| |?val| |<y>| ) ( |lt| |?val| |<y>| ) ( |ge| |?val| |<y>| ) ( |gt| |?val| |<y>| ) ) ) ( |print| "this query should not be satisfied." ) )         ( |query| ( |and| ( |Integer_1| |<ord>| |<onset>| |<offset>| |?val| ) ( |or| ( |eq| |?val| ( |float_1| |<ord>| |<onset>| |<offset>| |<val>| ) ) ( |ne| |?val| ( |float_1| |<ord>| |<onset>| |<offset>| |<val>| ) ) ( |le| |?val| ( |float_1| |<ord>| |<onset>| |<offset>| |<val>| ) ) ( |lt| |?val| ( |float_1| |<ord>| |<onset>| |<offset>| |<val>| ) ) ( |ge| |?val| ( |float_1| |<ord>| |<onset>| |<offset>| |<val>| ) ) ( |gt| |?val| ( |float_1| |<ord>| |<onset>| |<offset>| |<val>| ) ) ) ) ( |print| "this query should not be satisfied." ) )         ()         ()       )    )    ( SYSTEM>      (        ( SHAPA-PANE-VARS>          (            |Integer_1|            |float_1|            |float_2|            |Text_1|            |Text_2|            |Nominal_1|            |Nominal_2|            |matrix_1|            |matrix_2|            |pred_1|            |pred_2|            |pred_3|            |pred_4|          )        )      )    )  ))