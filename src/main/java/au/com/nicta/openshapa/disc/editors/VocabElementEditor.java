/*
 * VocabElementEditor.java
 *
 * Created on February 20, 2008, 4:34 PM
 */

package au.com.nicta.openshapa.disc.editors;

import java.awt.*;
import java.awt.event.*;
import javax.swing.*;
import javax.swing.tree.*;

import au.com.nicta.openshapa.db.*;

/**
 *
 * @author  Felix
 */
public class VocabElementEditor extends javax.swing.JPanel
{
  Column column;

  /** Creates new form VocabElementEditor */
  public VocabElementEditor(Column variable)
      throws SystemErrorException
  {
    initComponents();
    this.setVariable(variable);
  }

  public void setVariable(Column column)
      throws SystemErrorException
  {
    this.column = column;

    DefaultTreeModel dtm = (DefaultTreeModel)this.variableTree.getModel();
    
    DefaultMutableTreeNode dmtn = new DefaultMutableTreeNode(column);

    if (column instanceof DataColumn) {
      DataColumn dc = (DataColumn)column;
      MatrixVocabElement mve = dc.getDB().getMatrixVE(dc.getItsMveID());

      dtm.setRoot(dmtn);
      if ((mve.getType() == MatrixVocabElement.matrixType.MATRIX) ||
          (mve.getType() == MatrixVocabElement.matrixType.PREDICATE)) {
        for (int i=0; i<mve.getNumElements(); i++) {
          DefaultMutableTreeNode childNode = new DefaultMutableTreeNode(mve.getFormalArg(i));
          dmtn.add(childNode);
        }
      }
    }
  }

  /*
  public final static void main(String[] argv)
  {
    try {
      ODBCDatabase db = new ODBCDatabase();

      DataColumn dc = new DataColumn(db, "TestColumn", MatrixVocabElement.matrixType.MATRIX);
      long colId = db.addColumn(dc);
      dc = (DataColumn)db.getColumn("TestColumn");
      MatrixVocabElement mve = db.getMatrixVE(dc.getItsMveID());
      TextStringFormalArg tsfa = new TextStringFormalArg(db);
      tsfa.setFargName("<foobar>");
      mve.appendFormalArg(tsfa);

      VocabElementEditor vee = new VocabElementEditor(dc);

      JFrame jf = new JFrame();
      jf.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
      jf.getContentPane().setLayout(new BorderLayout());
      jf.add(vee, BorderLayout.CENTER);
      jf.setSize(new Dimension(300,200));
      jf.setVisible(true);
    } catch (Exception e) {
      System.err.println(e);
      e.printStackTrace();
    }
  }
   */
  
  /** This method is called from within the constructor to
   * initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is
   * always regenerated by the Form Editor.
   */
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents()
  {

    variableScrollPane = new javax.swing.JScrollPane();
    variableTree = new javax.swing.JTree();

    setBackground(java.awt.Color.white);
    setLayout(new java.awt.BorderLayout());

    variableTree.setDragEnabled(true);
    variableTree.setEditable(true);
    variableScrollPane.setViewportView(variableTree);

    add(variableScrollPane, java.awt.BorderLayout.CENTER);
  }// </editor-fold>//GEN-END:initComponents
  
  
  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.JScrollPane variableScrollPane;
  private javax.swing.JTree variableTree;
  // End of variables declaration//GEN-END:variables
  
}
