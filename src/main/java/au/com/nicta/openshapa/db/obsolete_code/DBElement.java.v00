         /*
 * DBElement.java
 *
 * Created on November 9, 2006, 4:22 PM
 *
 */

package au.com.nicta.openshapa.db;

/**
 * Abstract class defining the basic database element.
 * @author FGA
 */
public abstract class DBElement
{
  /** Bad/Default ID Identifier*/
  public final static long DEFAULT_ID = 0;
  
  /** The databse this element belogs to */
  protected Database db;

  /** The databse id */
  protected long id;

  /** The user to last modify the database */
  protected DBUser lastModUser = null;

  /**
   * Creates a new instance of DBElement
   * @param db The database this element belongs to
   * @param id The id value of this element
   */
  public DBElement(Database db, long id)
  {
    this.db = db;
    this.setID(id);
  } //End of DBElement constructor

  /**
   * Creates a new instance of DBElement
   * @param db The database this element belongs to
   */
  public DBElement(Database db)
  {
    this(db, DEFAULT_ID);
  } //End of DBElement constructor

  /**
   * Sets the id of the DBElement
   */
  protected void setID(long id)
  {
    this.id = id;
  } //End of setID() method

  /**
   * Returns the database this element belongs to
   * @return the database to which this element belongs
   */
  public Database getDB()
  {
    return (this.db);
  } //End of getDB() method

  /**
   * Returns the id of the DBElement
   * @return the id
   */
  public long getID()
  {
    return (this.id);
  } //End of getID() method

  /**
   * Returns the last user to modify the value
   * @return the user
   */
  public DBUser getLastModUser()
  {
    return (this.lastModUser);
  } //End of getLastModUser() method

  /**
   * Sets the last user to modify the DBValue
   * @param lastModUser the user who last modified the DBValue
   **/
  protected void setLastModUser(DBUser lastModUser)
  {
    this.lastModUser = lastModUser;
  } //End of setLastModUser() method

  /**
   * Checks for equality against another DBElement.<br>
   * Overides default Object.equals() method
   * @return true if the DBElement compared against is from same DB and has same id
   */
  public boolean equals(Object o)
  {
    if (o instanceof DBElement) {
      DBElement dbe = (DBElement)o;
      if (this.db.equals(dbe.getDB()) && (this.id==dbe.getID())) {
        return (true);
      }
    }

    return (false);
  } //End of equals() method

} //End of DBElement class definition
