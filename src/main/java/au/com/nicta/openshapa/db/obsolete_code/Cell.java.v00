/*
 * Cell.java
 *
 * Created on December 7, 2006, 3:15 PM
 *
 */

package au.com.nicta.openshapa.db;

import java.util.Vector;

/**
 * This is a abstract cell definition.
 * @author FGA
 */
public abstract class Cell extends DBElement
{
  /**
   * The column this cell is associated with
   */
  Column column = null;

  /**
   * CellChange listener list
   */
  Vector<CellChangeListener> cellListeners = new Vector<CellChangeListener>();
  
  /**
   * Comment Field
   */
  StringBuffer comment = new StringBuffer();
  
  /**
   * Creates a new instance of Cell
   */
  public Cell(Database db, Column column)
    throws SystemErrorException
  {
    super(db);
    this.column = column;
  } //End of Cell() constructor


  /**
   * Adds a cell listener reference to cell
   * @param cellListener The cell listener to add
   */
  public void addCellChangeListener(CellChangeListener cellListener)
  {
    if (this.cellListeners != null) {
      this.cellListeners.add(cellListener);
    }
  } //End of addCellChangeListener() method
  
  /**
   * Removes a cell listener reference from a cell
   */
  public void removeCellChangeListener(CellChangeListener cellListener)
  {
    if (this.cellListeners != null) {
      this.cellListeners.remove(cellListener);
    }
  } //End of removeCellChangeListener() method

  /**
   * Set the cell's comment field
   * @param comment the comment value
   */
   public void setComment(String comment)
   {
     this.comment.delete(0, this.comment.length());
     this.comment.append(comment);
   } //End of setComment() method

   /**
    * Gets the comment field
    * @return The comment field as a string
    */
    public String getComment()
    {
      return (this.comment.toString());
    } //End of getComment() method

} //End of Cell class definition
