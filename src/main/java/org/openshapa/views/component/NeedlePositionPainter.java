package org.openshapa.views.component;

import java.awt.BasicStroke;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.RenderingHints;
import java.awt.geom.GeneralPath;

import javax.swing.JComponent;

import org.openshapa.models.component.MixerView;
import org.openshapa.models.component.NeedleConstants;
import org.openshapa.models.component.NeedleModel;
import org.openshapa.models.component.Viewport;


/**
 * This class paints the position of the timing needle relative to the maximum duration.
 */
public final class NeedlePositionPainter extends JComponent {

    /**
     * Auto generated by Eclipse
	 */
	private static final long serialVersionUID = 6601118794279314688L;
	
	private NeedleModel needleModel;
    private MixerView mixer;

    public NeedlePositionPainter() {
        super();
    }

    public void setNeedleModel(final NeedleModel needleModel) {
        this.needleModel = needleModel;
        this.repaint();
    }

    public void setMixerView(final MixerView mixer) {
        this.mixer = mixer;
        repaint();
    }

    @Override public void paintComponent(final Graphics g) {

        if ((needleModel == null) || (mixer == null)) {
            return;
        }

        final Viewport viewport = mixer.getViewport();

        Graphics2D g2d = (Graphics2D) g;
        g2d.setRenderingHint(RenderingHints.KEY_ANTIALIASING,
            RenderingHints.VALUE_ANTIALIAS_ON);

        final long currentTime = needleModel.getCurrentTime();
        final float x = (float) ((double) currentTime * viewport.getViewWidth() / viewport.getMaxEnd() + Math.ceil(NeedleConstants.NEEDLE_HEAD_WIDTH));

        GeneralPath needleMarker = new GeneralPath();
        needleMarker.moveTo(x, 0);
        needleMarker.lineTo(x, getSize().getHeight());
        
        g2d.setColor(needleModel.getNeedleColor().darker());
        g2d.setStroke(new BasicStroke((float) NeedleConstants.NEEDLE_WIDTH));
        g2d.draw(needleMarker);
    }
}
