/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package org.datavyu.views;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.net.MalformedURLException;
import java.net.URL;
import java.net.URLConnection;
import javax.swing.JOptionPane;
import org.datavyu.Build;
import org.datavyu.Configuration;
import org.datavyu.Datavyu;
import org.jdesktop.application.Application;
import org.jdesktop.application.ResourceMap;


/**
 *
 * @author eric
 */
public class UpdateV extends javax.swing.JDialog {

    /* Private data */
    private static final String VERSION_FILE      = "http://www.datavyu.org/version.txt";
    private static final String PRE_VERSION_FILE  = "http://www.datavyu.org/pre_version.txt";
    private static final String DOWNLOAD_PAGE     = "http://www.datavyu.org/download";
    private static final String PRE_DOWNLOAD_PAGE = "http://www.datavyu.org/download_pre";
    private boolean m_update_available = false;
    private ServerVersion m_server;
    private LocalVersion  m_local;

    /* Private class for handling the local version number */
    private class LocalVersion {
        public String version = "";
        public String build   = "";

        public LocalVersion() {
            ResourceMap bMap = Application.getInstance(Datavyu.class).getContext().getResourceMap(Build.class);
            ResourceMap rMap = Application.getInstance(Datavyu.class).getContext().getResourceMap(Datavyu.class);
            version = rMap.getString("Application.version");
            build   = bMap.getString("Application.build");
        }
    }

    /* Private class for handling the server version number */
    private class ServerVersion {
        public String version = "";
        public String build   = "";

        public ServerVersion(final String version_file) {
            URL url;
            try {
                url = new URL(version_file);

                URLConnection conn = url.openConnection();
                BufferedReader br = new BufferedReader(new InputStreamReader(conn.getInputStream()));

                version = br.readLine();
                build   = br.readLine();

                br.close();
            } catch (MalformedURLException e) {
                e.printStackTrace();
            } catch (IOException e) {
                e.printStackTrace();
            }
        }
    }

    public boolean Available() {
        return (m_update_available);
    }

    public boolean IgnoreVersion() {
        Configuration config = Configuration.getInstance();
        String ignoreVersion = config.getIgnoreVersion();

        return (ignoreVersion.equals(m_server.version));
    }

    private void PrepareDialog() {
        Configuration config = Configuration.getInstance();
        jcheck_get_prereleases.setSelected(config.getPrereleasePreference());

        m_local  = new LocalVersion();
        m_server = new ServerVersion(config.getPrereleasePreference() ? PRE_VERSION_FILE : VERSION_FILE);

        jlabel_current_version.setText(m_local.version);
        jlabel_server_version.setText(m_server.version);

        m_update_available = !m_server.version.equals("") && !m_local.version.equals(m_server.version);

        /* show alternative dialog info, when update is not available */
        if (!m_update_available) {
            if (!m_server.version.equals("")) {
                setTitle("Datavyu is up to date!");
                update_message.setText("Datavyu is up to date!");
            } else {
                setTitle("Error Accessing Server");
                jlabel_server_version.setText("<unavailable>");
                update_message.setText("Error accessing version server");
            }
            jbutton_later.setText("Close");
            jbutton_later.setToolTipText("Close");
            jbutton_later.setVisible(true);
            jbutton_now.setVisible(false);
            jbutton_never.setVisible(false);
        }
    }

    /**
     * Creates new form UpdateV
     */
    public UpdateV(java.awt.Frame parent, boolean modal) {
        super(parent, modal);

        initComponents();

        PrepareDialog();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jbutton_now = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jlabel_current_version = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jlabel_server_version = new javax.swing.JLabel();
        jbutton_later = new javax.swing.JButton();
        update_message = new javax.swing.JLabel();
        jbutton_never = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jcheck_get_prereleases = new javax.swing.JCheckBox();
        jSeparator1 = new javax.swing.JSeparator();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Update Available!");
        setBounds(new java.awt.Rectangle(0, 0, 282, 123));
        setModal(true);
        setResizable(false);

        jbutton_now.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jbutton_now.setText("Now");
        jbutton_now.setToolTipText("Take me to the download page");
        jbutton_now.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbutton_nowActionPerformed(evt);
            }
        });

        jLabel1.setText("Datavyu Current Version:");

        jlabel_current_version.setText("<version>");

        jLabel4.setText("Version Available:");

        jlabel_server_version.setText("<version>");

        jbutton_later.setText("Later");
        jbutton_later.setToolTipText("Remind me again");
        jbutton_later.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbutton_laterActionPerformed(evt);
            }
        });

        update_message.setText("Update is available.  Get it...");

        jbutton_never.setText("Never");
        jbutton_never.setToolTipText("Don't remind me of this update (but still notify me when the next version is released)");
        jbutton_never.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbutton_neverActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setText("Checking for updates...");

        jcheck_get_prereleases.setText("Get Prereleases");
        jcheck_get_prereleases.setFocusPainted(false);
        jcheck_get_prereleases.setFocusable(false);
        jcheck_get_prereleases.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcheck_get_prereleasesActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(30, 30, 30)
                                .addComponent(jcheck_get_prereleases))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(28, 28, 28)
                                        .addComponent(jbutton_now, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jbutton_later, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jbutton_never))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel4)
                                        .addGap(56, 56, 56)
                                        .addComponent(jlabel_server_version))
                                    .addComponent(update_message)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel1)
                                        .addGap(18, 18, 18)
                                        .addComponent(jlabel_current_version)))
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(205, 205, 205)
                        .addComponent(jSeparator1)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 32, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jcheck_get_prereleases)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jlabel_current_version))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jlabel_server_version))
                .addGap(18, 18, 18)
                .addComponent(update_message, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbutton_now)
                    .addComponent(jbutton_later)
                    .addComponent(jbutton_never))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jbutton_nowActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbutton_nowActionPerformed
        Configuration config = Configuration.getInstance();
        String url = config.getPrereleasePreference() ? PRE_DOWNLOAD_PAGE : DOWNLOAD_PAGE;

        try {
          java.awt.Desktop.getDesktop().browse(java.net.URI.create(url));
          this.dispose();
        }
        catch (java.io.IOException e) {
            System.out.println(e.getMessage());

            setTitle("Error Opening Website");
            update_message.setText("Please visit " + url);
            jbutton_later.setText("Close");
            jbutton_later.setToolTipText("Close");
            jbutton_later.setVisible(true);
            jbutton_now.setVisible(false);
            jbutton_never.setVisible(false);
        }
    }//GEN-LAST:event_jbutton_nowActionPerformed

    private void jbutton_neverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbutton_neverActionPerformed
        this.dispose();
        Configuration config = Configuration.getInstance();
        config.setIgnoreVersion(m_server.version);
    }//GEN-LAST:event_jbutton_neverActionPerformed

    private void jbutton_laterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbutton_laterActionPerformed
        this.dispose();

        /* if the 'later' button is clicked, we want to clear the ignoreVersion
         * *unless* we're dealing with the case where the server could not be accessed.
         */
        if (!m_server.version.equals("")) {
            Configuration config = Configuration.getInstance();
            config.setIgnoreVersion("");
        }
    }//GEN-LAST:event_jbutton_laterActionPerformed

    private void jcheck_get_prereleasesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcheck_get_prereleasesActionPerformed

        /* if we're selecting it, we need to confirm if the user is sure */
        if (jcheck_get_prereleases.isSelected())
        {
            int dialogResult;
            dialogResult = JOptionPane.showConfirmDialog (null,
                    "Pre-releases are not supported and may have bugs.  Are you sure?", "Prerelease Warning!",
                    JOptionPane.YES_NO_OPTION, JOptionPane.WARNING_MESSAGE);
            if(dialogResult == JOptionPane.YES_OPTION){
                jcheck_get_prereleases.setSelected(true);
            }
            else {
                jcheck_get_prereleases.setSelected(false);
            }
        }

        Configuration config = Configuration.getInstance();
        config.setPrereleasePreference(jcheck_get_prereleases.getSelectedObjects() != null);

        PrepareDialog();
    }//GEN-LAST:event_jcheck_get_prereleasesActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UpdateV.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UpdateV.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UpdateV.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UpdateV.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                UpdateV dialog = new UpdateV(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });

                dialog.setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JButton jbutton_later;
    private javax.swing.JButton jbutton_never;
    private javax.swing.JButton jbutton_now;
    private javax.swing.JCheckBox jcheck_get_prereleases;
    private javax.swing.JLabel jlabel_current_version;
    private javax.swing.JLabel jlabel_server_version;
    private javax.swing.JLabel update_message;
    // End of variables declaration//GEN-END:variables
}
